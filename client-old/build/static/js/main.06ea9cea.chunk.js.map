{"version":3,"sources":["pages/Landing.js","styles/main.js","services/monsters.js","components/ActionButtons.js","components/Menu.js","components/Comment.js","components/CommentsList.js","components/CollapsePanel.js","components/CommentsSection.js","components/Card.js","components/Loading.js","pages/Monsters.js","utils/ScrollToTop.js","App.js","serviceWorker.js","index.js"],"names":["Landing","props","Fragment","className","Typography","variant","to","color1","useStyles","createMuiTheme","palette","primary","light","main","dark","secondary","text","makeStyles","theme","backgroundColor","minWidth","minHeight","flexSpaceBetween","display","justifyContent","width","flexCenter","width100","spacingRight","marginRight","spacing","height200","height","height250","height300","bottom20","marginBottom","bgDark","bgColor","bgLight","bgHoverDarker","bgHoverLighter","appBar","zIndex","drawer","color","toolbar","mixins","drawerPaper","formPaper","padding","marginTop","content","flexGrow","breakpoints","up","marginLeft","textColorLight","textColorDark","textColor","noDecoration","textDecoration","center","textAlign","hideMdUp","down","hideSmDown","loading","flexDirection","alignItems","fontSize","get1","query","a","axios","get","res","data","get2","get3","ActionButtons","user","comments","likes","handleExpandClick","IconButton","aria-label","length","onClick","CardMenu","model","_id","object","anchorEl","handleMenuClose","menuItems","Menu","id","keepMounted","open","Boolean","onClose","map","item","i","MenuItem","key","name","Comment","comment","users","classes","author","publicName","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","component","inline","moment","created","fromNow","body","CommentsList","List","Divider","SimpleCollapse","expanded","children","title","Collapse","in","timeout","unmountOnExit","CommentsSection","Box","CollapsePanel","MonsterCard","subtitle","mediaTop","mediaMiddle","updateStateData","React","useState","setExpanded","setAnchorEl","Card","style","CardHeader","avatar","action","aria-controls","aria-haspopup","event","currentTarget","subheader","CardContent","CardActions","disableSpacing","LinearBuffer","progress","setProgress","buffer","setBuffer","progressRef","useRef","useEffect","current","diff","Math","random","diff2","timer","setInterval","clearInterval","paddingTop","LinearProgress","value","valueBuffer","Monsters","monsters","setMonsters","getMonsters","monstersService","Container","maxWidth","Grid","container","direction","justify","monster","index","xs","sm","md","lg","xl","CardMedia","image","withRouter","pathname","location","window","scrollTo","App","state","path","Component","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.06ea9cea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/landing.css';\r\n// import Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst Landing = props => (\r\n    <React.Fragment>\r\n        <div className=\"fade-in\">\r\n            <div className=\"landing-header\">\r\n                <Typography variant=\"h4\">A large, ugly, and frightening imaginary creature</Typography>\r\n                <Typography className=\"offset\" variant=\"h5\">\r\n                    noun | UK <VolumeUpIcon />\r\n                    /ˈmɒn.stər/ | US <VolumeUpIcon /> /ˈmɑːn.stɚ/\r\n                </Typography>\r\n                <Link to={'/monsters/monsters'} className=\"btn-slideshow\">\r\n                ENTER IF YOU DARE\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        <ul className=\"slideshow\">\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n        </ul>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Landing;\r\n\r\n","//TODO: add some fancy transition when opening a new page, currently updating page feels unnatural\r\n\r\n// The purpose of this file is to integrate all styles in one place and reuse classes in various components\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Below components need to be imported to correctly overwrite styles with classes in useStyle\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Custom palette - colors should be defined here and referenced in classes\r\nconst color1 = '#1A1A1D'; // black\r\nconst color2 = '#950740'; // dark purple\r\nconst color3 = '#F0F0F0'; // light grey\r\nconst color4 = '#6e6e6e'; // lighter black\r\nconst colorHoverLighter = 'rgba(255, 255, 255, 0.075)';\r\nconst colorHoverDarker = 'rgba(0, 0, 0, 0.075)';\r\n\r\n// Overwrite colors with custom color palette\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: color3,\r\n            main: color1,\r\n            dark: color2,\r\n        },\r\n        secondary: {\r\n            main: color2,\r\n        },\r\n        text: {\r\n            primary: color1,\r\n            secondary: color4,\r\n        },\r\n    },\r\n});\r\n\r\n// Misc const used in styles\r\nconst drawerWidth = 300;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    // Display and size\r\n    main: {\r\n        backgroundColor: color3,\r\n        minWidth: '100%',\r\n        minHeight: '100%',\r\n    },\r\n    flexSpaceBetween: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        width: '100%',\r\n    },\r\n    flexCenter: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    width100: {\r\n        width: '100px',\r\n    },\r\n    spacingRight: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    height200: {\r\n        height: '200px',\r\n    },\r\n    height250: {\r\n        height: '250px',\r\n    },\r\n    height300: {\r\n        height: '300px',\r\n    },\r\n    bottom20: {\r\n        marginBottom: '20px',\r\n    },\r\n\r\n    // Containers\r\n    bgDark: {\r\n        backgroundColor: color1,\r\n    },\r\n    bgColor: {\r\n        backgroundColor: color2,\r\n    },\r\n    bgLight: {\r\n        backgroundColor: color3,\r\n    },\r\n    bgHoverDarker: {\r\n        backgroundColor: colorHoverDarker,\r\n    },\r\n    bgHoverLighter: {\r\n        backgroundColor: colorHoverLighter,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: color3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: `${drawerWidth}px`,\r\n    },\r\n    formPaper: {\r\n        padding: theme.spacing(2),\r\n        color: color1,\r\n        width: '33%',\r\n        minWidth: '400px',\r\n        marginTop: '3%',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: `${drawerWidth}px`,\r\n        },\r\n    },\r\n\r\n    // Texts\r\n    textColorLight: {\r\n        color: color3,\r\n    },\r\n    textColorDark: {\r\n        color: color1,\r\n    },\r\n    textColor: {\r\n        color: color2,\r\n    },\r\n    noDecoration: {\r\n        textDecoration: 'none',\r\n    },\r\n    center: {\r\n        textAlign: 'center',\r\n    },\r\n\r\n    // Hidden\r\n    hideMdUp: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    hideSmDown: {\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n\r\n    // Misc\r\n    loading: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: '5%',\r\n        fontSize: '10em',\r\n        color: color1,\r\n    },\r\n}));\r\n","// This service file runs image search websites\r\n// by keywords 'furry monster' and pulls image addresses \r\n// of found images thumbnails.\r\n// These image url's are added to the monster json generator\r\n\r\n// Search for this app (images): \r\n// https://www.google.com/search?q=furry+monster&tbm=isch\r\n\r\n// Allow user to select color or other features cute/humanoid\r\n// https://www.google.com/search?q=furry+monster&tbm=isch&chips=q:furry+monster,g_1:pink\r\n\r\n// select features from textContent of spans by class name \"hIOe2\"\r\n// Click on images and get url from element with clsss n3VNCb\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    // Using puppeteer\r\n    get1: async query => {\r\n        let res = await axios.get(`/puppeteer/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using custom google search api (only 10 in free version)\r\n    get2: async query => {\r\n        let res = await axios.get(`/custom-google/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using html selectors\r\n    get3: async query => {\r\n        let res = await axios.get(`/html/search?q=${query}`);\r\n        return res.data || [];\r\n    }\r\n};","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\r\n\r\nexport const ActionButtons = ({ user, comments, likes, handleExpandClick }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <Typography variant=\"caption\">{likes.length}</Typography>\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            {/* <IconButton aria-label=\"share\">\r\n                                <ShareIcon />\r\n                            </IconButton> */}\r\n            <IconButton\r\n                onClick={handleExpandClick}\r\n                // aria-expanded={expanded}\r\n                // aria-label=\"show more\"\r\n            >\r\n                <ModeCommentOutlinedIcon />\r\n                <Typography variant=\"caption\">{comments.length}</Typography>\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\r\n// import { ObjectDeleteButton } from '../../../Buttons';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport const CardMenu = ({ user, model, _id, object, anchorEl, handleMenuClose, menuItems }) => {\r\n    return (\r\n        <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleMenuClose}>\r\n            {/* TODO: implement action to go to projects page and change state for current project */}\r\n            {menuItems.map((item, i) => (\r\n                <MenuItem key={i} onClick={handleMenuClose}>\r\n                    {item.name}\r\n                </MenuItem>\r\n            ))}\r\n            {/* <ObjectDeleteButton user={user} model={model} object={object} /> */}\r\n        </Menu>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport moment from 'moment';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { ObjectDeleteButton } from './Buttons';\r\n\r\nexport const Comment = ({ user, comment, users }) => {\r\n    const classes = useStyles();\r\n    const author = users.get(comment.author).publicName;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                    <Avatar alt={author} src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <React.Fragment>\r\n                            <Typography component=\"span\" variant=\"body2\" className={classes.inline} color=\"textPrimary\">\r\n                                {author}\r\n                            </Typography>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"caption\"\r\n                                className={classes.inline}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {` - ${moment(comment.created).fromNow()}`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                    secondary={comment.body}\r\n                />\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n            </ListItem>\r\n            {/* <Divider variant=\"inset\" component=\"li\" /> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Comment } from './Comment';\r\n\r\nexport const CommentsList = ({ user, comments, users }) => {\r\n    return (\r\n        <List>\r\n            <Divider component=\"li\" />\r\n            {(comments || []).map(comment => (\r\n                <Comment key={comment._id} user={user} comment={comment} users={users} />\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\n// TODO: fix the warning about children\r\nconst SimpleCollapse = ({ expanded, title, children }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                {children}\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SimpleCollapse;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { CommentsList } from './CommentsList';\r\n// import { AddComment } from './forms/Comment';\r\nimport CollapsePanel from './CollapsePanel';\r\n\r\nconst CommentsSection = ({ expanded, user, object, model, comments, users }) => {\r\n    return (\r\n        <Box id=\"comments\">\r\n            <CollapsePanel expanded={expanded}>\r\n                <CommentsList user={user} comments={comments} users={users} />\r\n                {/* <AddComment user={user} _id={object._id} model={model} updateStateData={updateStateData} push={push} /> */}\r\n            </CollapsePanel>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport { CommentsSection };\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { ActionButtons } from './ActionButtons';\r\nimport { CardMenu } from './Menu';\r\nimport { CommentsSection } from './CommentsSection';\r\n\r\n// Pass a component to mediaTop or mediaBottom depending on which location it is needed in\r\nexport const MonsterCard = ({\r\n    user,\r\n    object,\r\n    model,\r\n    comments,\r\n    likes,\r\n    users,\r\n    title,\r\n    subtitle,\r\n    body,\r\n    mediaTop,\r\n    mediaMiddle,\r\n    menuItems,\r\n    updateStateData,\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleMenuClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card style={{height: \"100%\"}} >\r\n            {mediaTop}\r\n            <CardHeader\r\n                avatar={null}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"long-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleMenuClick}\r\n                    >\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={title}\r\n                subheader={subtitle}\r\n            />\r\n            <CardMenu\r\n                user={user}\r\n                object={object}\r\n                model={model}\r\n                anchorEl={anchorEl}\r\n                handleMenuClose={handleMenuClose}\r\n                menuItems={menuItems}\r\n            />\r\n            {mediaMiddle}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {body}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <ActionButtons user={user} comments={comments} likes={likes} handleExpandClick={handleExpandClick} />\r\n            </CardActions>\r\n            <CardContent>\r\n                <CommentsSection\r\n                    expanded={expanded}\r\n                    user={user}\r\n                    object={object}\r\n                    model={model}\r\n                    comments={comments}\r\n                    users={users}\r\n                    updateStateData={updateStateData}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Container, Typography, LinearProgress, CircularProgress } from '@material-ui/core';\r\n\r\nexport const Loading = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Empty = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <i className=\"optin monster icon\" style={{color: \"#fff\"}} href=\"/\" />\r\n            <Typography variant=\"h5\" style={{color: \"#fff\"}}>Oops... Nothing found. Lazy, lazy...</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const LinearBuffer = () => {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [buffer, setBuffer] = React.useState(10);\r\n  \r\n    const progressRef = React.useRef(() => {});\r\n    React.useEffect(() => {\r\n      progressRef.current = () => {\r\n        if (progress > 100) {\r\n          setProgress(0);\r\n          setBuffer(10);\r\n        } else {\r\n          const diff = Math.random() * 10;\r\n          const diff2 = Math.random() * 10;\r\n          setProgress(progress + diff);\r\n          setBuffer(progress + diff + diff2);\r\n        }\r\n      };\r\n    });\r\n  \r\n    React.useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        progressRef.current();\r\n      }, 500);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n  \r\n    return (\r\n      <div style={{ width: \"100%\", paddingTop: \"45vh\"}}>\r\n        <LinearProgress \r\n            variant=\"buffer\" \r\n            value={progress} \r\n            valueBuffer={buffer} \r\n            color=\"secondary\"\r\n        />\r\n      </div>\r\n    );\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport monstersService from '../services/monsters'\r\nimport { MonsterCard } from '../components/Card'\r\nimport { Container, Grid, CardMedia } from '@material-ui/core';\r\nimport { LinearBuffer } from '../components/Loading'\r\n\r\nconst Monsters = () => {\r\n    const classes = useStyles();\r\n    const [monsters, setMonsters] = useState(null);\r\n\r\n    const getMonsters = async () => {\r\n        let res = await monstersService.get1('furry+monster');\r\n        setMonsters(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!monsters) {\r\n            getMonsters();\r\n        }\r\n    });\r\n\r\n    // TODO: Handle timeout\r\n    return (\r\n        !monsters || monsters.length === 0 ?\r\n            <LinearBuffer />\r\n            : (\r\n                <Container maxWidth=\"lg\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={2}\r\n                    >\r\n                        {monsters.map((monster, index) =>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={`g2-${index}`}>\r\n                                <MonsterCard\r\n                                    key={index}\r\n                                    // user={user}\r\n                                    // object={post}\r\n                                    // model=\"Monster\"\r\n                                    comments={[]}\r\n                                    likes={[]}\r\n                                    // users={users}\r\n                                    title=\"Monster\"\r\n                                    subtitle={`No${index + 1}`}\r\n                                    body={monster.title}\r\n                                    mediaMiddle={\r\n                                        <CardMedia className={classes.height250} image={monster.src} />\r\n                                        // <img src={monster.data} />\r\n                                    }\r\n                                    menuItems={[{ name: 'Share monster' }]}\r\n                                // updateStateData={updateStateData}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Container>\r\n            )\r\n    );\r\n}\r\n\r\nexport default Monsters;","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './pages/Landing';\nimport Monsters from './pages/Monsters';\nimport './App.css';\nimport ScrollToTop from './utils/ScrollToTop';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <Router>\n        <ScrollToTop>\n          <div className=\"App\">\n            <Switch>\n              {/*\n                A Switch will iterate through all routes and return\n                on the first match.\n                The order matters - the most generic paths should\n                be at the very end.\n              */}\n              <Route path=\"/monsters/monsters\">\n                <Monsters />\n              </Route>\n              <Route path=\"/monsters\">\n                <Landing />\n              </Route>\n            </Switch>\n          </div>\n        </ScrollToTop>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
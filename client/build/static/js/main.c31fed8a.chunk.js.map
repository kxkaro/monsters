{"version":3,"sources":["img/JumbotronLight.png","img/JumbotronDark.png","img/Register.png","utils/authenticatedPage.tsx","services/monsters.tsx","constants/data.tsx","pages/Landing.tsx","utils/authDecorators.tsx","utils/routingDecorators.tsx","styles/main.tsx","components/navigation/Jumbotron.tsx","components/DarkModeSwitch.tsx","components/navigation/AuthButtons.tsx","components/navigation/MenuDrawer.tsx","utils/HideOnScroll.tsx","components/navigation/NavBar.tsx","components/layouts/Main.tsx","components/Post.tsx","components/layouts/Post.tsx","components/navigation/ContentsList.tsx","components/layouts/Feed.tsx","components/Loading.tsx","components/ActionButtons.tsx","components/Card.tsx","components/Gallery.tsx","pages/Home.tsx","pages/Monsters.tsx","utils/withValidation.tsx","components/forms/AppForm.tsx","components/forms/GridFields.tsx","components/forms/AuthForm.tsx","services/authService.tsx","utils/interceptPage.tsx","pages/Register.tsx","services/usersService.tsx","pages/Login.tsx","pages/Logout.tsx","utils/ScrollToTop.tsx","constants/dummyGallery.tsx","App.tsx","index.tsx"],"names":["module","exports","wrappedComponent","getGoogleScrape","query","a","axios","get","res","data","getGoogleAPI","getGoogleHTML","INITIAL_STATE","user","undefined","whoAmIRequestDone","mode","CATEGORIES","PATHS","home","Landing","props","Fragment","className","Typography","variant","to","login","main","withPush","withRouter","history","push","destination","historyToPush","useStyles","makeStyles","theme","createStyles","backgroundColor","palette","primary","light","minWidth","minHeight","flexSpaceBetween","display","justifyContent","width","flexCenter","width100","spacingRight","marginRight","spacing","cardMedia","height","height250","height300","bottom20","marginBottom","formPaper","padding","color","margin","jumbotron","jumbotronContent","marginTop","position","jumbotronImg","top","left","backgroundSize","backgroundPosition","zIndex","boxShadow","image","borderRadius","pageNavList","paddingTop","paddingBottom","noDecoration","textDecoration","center","textAlign","hideMdUp","breakpoints","down","hideSmDown","up","card","flexDirection","cardTitle","fontSize","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","toolbar","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","contentPadding","flexGrow","content","contentShift","loading","Jumbotron","img","jumbotronLight","title","subtitle","actions","classes","onClick","style","backgroundImage","Grow","timeout","in","Grid","container","direction","justify","item","xs","md","gutterBottom","map","action","i","key","path","Button","name","Hidden","smDown","DarkModeSwitch","setDarkMode","useState","darkModeChecked","state","setState","noWrap","Switch","checked","onChange","event","target","inputProps","logout","register","getText","publicName","AuthButtonsHorizontal","signUpButton","loginButton","Box","AuthButtonsVertical","ListItem","button","component","Link","ListItemText","List","MenuDrawer","open","toggleDrawer","changeQuery","Drawer","anchor","onClose","paper","IconButton","Divider","text","index","mdUp","HideOnScroll","children","window","trigger","useScrollTrigger","Slide","appear","landing","NavBar","handleDrawerOpen","handleDrawerClose","useLocation","pathname","AppBar","clsx","Toolbar","aria-label","edge","includes","Layout","type","createMuiTheme","dark","secondary","common","black","white","background","default","error","contrastText","warning","info","success","disabled","hint","typography","fontFamily","responsiveFontSizes","createTheme","setOpen","ThemeProvider","CssBaseline","Post","body","PostLayout","id","additional","ContentsList","items","smooth","substring","FeedLayout","posts","contentsList","post","Container","maxWidth","mdDown","lg","LinearBuffer","React","progress","setProgress","buffer","setBuffer","progressRef","useRef","useEffect","current","diff","Math","random","diff2","timer","setInterval","clearInterval","LinearProgress","value","valueBuffer","ActionButtons","comments","likes","handleExpandClick","expanded","MonsterCard","mediaTop","mediaMiddle","setExpanded","Card","CardContent","CardActions","disableSpacing","Gallery","setValue","length","Tabs","indicatorColor","scrollButtons","textColor","newValue","Tab","label","monster","sm","xl","parseInt","toString","object","_id","model","users","Map","CardMedia","src","menuItems","guestPage","jumbotronDark","Feed","location","withoutLoginRequired","authenticatedPage","search","withLoginRequired","getValue","obj","Object","entries","withValidationList","errors","touched","flat","child","cloneElement","withValidation","AppForm","initialValues","onSubmit","validationSchema","submitDisabled","AppFormLayout","Paper","align","Alert","severity","DarkTextField","withStyles","root","borderBottomColor","borderColor","TextField","GridField","fieldProps","as","fullWidth","helperText","AuthForm","values","Yup","shape","email","required","password","min","matches","sendRawPostRequest","url","method","qs","stringify","headers","then","response","username","catch","interceptPage","nextPath","parse","ignoreQueryPrefix","next","withNext","onSuccess","setError","setErrorMessage","err","request","authService","getAll","update","put","objectId","onLoginSuccess","showError","indexOf","usersService","matchedUsers","filter","Logout","logoutRequestDone","setLogoutRequestDone","setTimeout","finally","Fade","scrollTo","dummyGallery","getData","toLowerCase","App","resolveWhoAmI","clearUser","setUser","getMonsters","monstersService","addItems","list","this","basename","process","exact","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31fed8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JumbotronLight.49496ca5.png\";","module.exports = __webpack_public_path__ + \"static/media/JumbotronDark.026a1340.png\";","module.exports = __webpack_public_path__ + \"static/media/Register.f064e9ed.png\";","import { withLoginRequired, withoutLoginRequired } from './authDecorators';\r\nimport { withRouter } from 'react-router';\r\n\r\n// HOC for pages requiring the user to be authenticated.\r\n//\r\n// Redirects to the login page if the user is not logged in.\r\nexport const authenticatedPage = (wrappedComponent: any) => withRouter(withLoginRequired(wrappedComponent));\r\n\r\n// Redirects to the main page if the user is logged in.\r\nexport const guestPage = (wrappedComponent: any) => withRouter(withoutLoginRequired(wrappedComponent));\r\n","// This service file runs image search websites\r\n// by keywords 'furry monster' and pulls image addresses \r\n// of found images thumbnails.\r\n// These image url's are added to the monster json generator\r\n\r\n// Search for this app (images): \r\n// https://www.google.com/search?q=furry+monster&tbm=isch\r\n\r\n// Allow user to select color or other features cute/humanoid\r\n// https://www.google.com/search?q=furry+monster&tbm=isch&chips=q:furry+monster,g_1:pink\r\n\r\n// select features from textContent of spans by class name \"hIOe2\"\r\n// Click on images and get url from element with clsss n3VNCb\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    // Using puppeteer\r\n    getGoogleScrape: async (query: string) => {\r\n        let res = await axios.get(`/api/puppeteer/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using custom google search api (only 10 in free version)\r\n    getGoogleAPI: async (query: string) => {\r\n        let res = await axios.get(`/api/google-api/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using html selectors\r\n    getGoogleHTML: async (query: string) => {\r\n        let res = await axios.get(`/api/html/search?q=${query}`);\r\n        return res.data || [];\r\n    }\r\n};","import {StateType } from '../logic/types'\r\nimport monstersService from '../services/monsters'\r\n\r\n// Define here state values to initialize the App with\r\nconst INITIAL_STATE: StateType = {\r\n    user: undefined,\r\n    whoAmIRequestDone: false,\r\n    mode: \"light\",\r\n    query: 'furry+monster',\r\n    data: [],\r\n}\r\n\r\n// Temp categories used as search words\r\nconst CATEGORIES = ['Giant', 'Pink', 'Cute', 'Art', 'Little', 'Friendly', 'Mythical']\r\n\r\n// Below three methods should return results in the same shape\r\nconst { getGoogleAPI, getGoogleHTML, getGoogleScrape } = monstersService;\r\nconst SEARCH_METHODS = {\r\n    \"Puppeteer\": getGoogleScrape, \r\n    \"Google API\": getGoogleAPI, \r\n    \"HTML\": getGoogleHTML,\r\n};\r\n\r\nconst PATHS = {\r\n    root: \"/\",\r\n    landing: \"/\",\r\n    home: \"/home\",\r\n    login: \"/login\",\r\n    logout: \"/logout\",\r\n    register: \"/register\",\r\n    main: \"/feed\",\r\n}\r\n\r\nexport { INITIAL_STATE, PATHS, CATEGORIES, SEARCH_METHODS }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/landing.css';\r\n// import Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport { PATHS } from '../constants/data';\r\nconst { home } = PATHS;\r\n\r\nconst Landing = (props: any) => (\r\n    <React.Fragment>\r\n        <div className=\"fade-in\">\r\n            <div className=\"landing-header\">\r\n                <Typography variant=\"h4\">A large, ugly, and frightening imaginary creature</Typography>\r\n                <Typography className=\"offset\" variant=\"h5\">\r\n                    noun | UK <VolumeUpIcon />\r\n                    /ˈmɒn.stər/ | US <VolumeUpIcon /> /ˈmɑːn.stɚ/\r\n                </Typography>\r\n                <Link to={home} className=\"btn-slideshow\">\r\n                ENTER IF YOU DARE\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        <ul className=\"slideshow\">\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n        </ul>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Landing;\r\n\r\n","import { Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PATHS } from '../constants/data';\r\nconst { login, main } = PATHS;\r\n\r\n// Renders the component if the user is logged in.\r\n// Redirects to the login page otherwise.\r\nexport const withLoginRequired = (wrappedComponent: any) => (props: any) => {\r\n    const {\r\n        user,\r\n        location: { pathname },\r\n    } = props;\r\n    \r\n    if (user) {\r\n        return wrappedComponent(props);\r\n    } else {\r\n        return <Redirect to={{ pathname: login, search: `?next=${pathname}` }} />;\r\n    }\r\n};\r\n\r\n// Renders the component if the user is not logged in.\r\n// Redirects to the login page otherwise.\r\nexport const withoutLoginRequired = (wrappedComponent: any) => (props: any) => {\r\n    const {\r\n        user,\r\n        location: { pathname },\r\n    } = props;\r\n    if (!user) {\r\n        return wrappedComponent(props);\r\n    } else {\r\n        return <Redirect to={{ pathname: main }} />;\r\n    }\r\n};\r\n","import qs from 'qs';\r\nimport { withRouter } from 'react-router';\r\nimport { PATHS } from '../constants/data';\r\nconst { home } = PATHS;\r\n\r\n// Maps a react-router's `history` object to a simple `push` function.\r\nconst historyToPush: any = (wrappedComponent: any) => (props: any) => {\r\n    const { history } = props;\r\n    const push = (destination: string) => history.push(destination);\r\n    return wrappedComponent({ ...props, push });\r\n};\r\n\r\n// Injects a `push` property which handles client-side redirects.\r\nexport const withPush: any = (wrappedComponent: void) => withRouter(historyToPush(wrappedComponent));\r\n\r\n// Injects a `next` property to the wrapped component which, when invoked, will redirect the client to a specified path.\r\n// Should be applied to a component decorated with `withPush`.\r\nexport const withNext: any = (wrappedComponent: any) => (props: any) => {\r\n    const { location, push } = props;\r\n    const nextPath = qs.parse(location.search, { ignoreQueryPrefix: true }).next || home;\r\n    const next = () => push(nextPath);\r\n    return wrappedComponent({ ...props, next });\r\n};\r\n\r\n// TODO: define proper types for all 'wrappedComponent' props in the whole application. Temporarily defined as 'any'","/* \r\n    The purpose of this file is to integrate all styles in one place and reuse classes in various components\r\n*/\r\nimport { ModeType } from '../logic/types';\r\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport { fade, makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\n// Below components need to be imported to correctly overwrite styles with classes in useStyle\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// // Custom palette - colors should be defined here and referenced in classes\r\n// const color1 = '#1A1A1D'; // black\r\n// const color2 = '#950740'; // dark purple\r\n// const color3 = '#F0F0F0'; // light grey\r\n// const color4 = '#6e6e6e'; // lighter black\r\n// const colorHoverLighter = 'rgba(255, 255, 255, 0.075)';\r\n// const colorHoverDarker = 'rgba(0, 0, 0, 0.075)';\r\n\r\n// Wrapper for the function in order to pass type parameter. \r\n// Requires defining 'const theme' in components which make use of it. See Layout.tsx\r\nconst createTheme = (type: ModeType) => {\r\n\r\n    let theme = createMuiTheme({\r\n        // For more customization options see https://material-ui.com/customization/default-theme/\r\n        // mixins: {\r\n        //     toolbar: {\r\n        //         // minHeight: \"56px\", // default\r\n        //         minHeight: \"112px\",\r\n        //         '@media (min-width:0px) and (orientation: landscape)': {\r\n        //             // minHeight: \"48px\", // default\r\n        //             minHeight: \"96px\",\r\n        //         },\r\n        //         '@media (min-width:600px)': {\r\n        //             // minHeight: \"64px\",   // default\r\n        //             minHeight: \"128px\",\r\n        //         }\r\n        //     },\r\n        // },\r\n        // TODO: Think if modifying default dark mode backgrounds makes sense, if yes create a separate color palette for dark\r\n        palette: {\r\n            type: type,\r\n            primary: {\r\n                light: \"#B75D69\",\r\n                main: \"#372549\",\r\n                dark: \"#1A1423\",\r\n                // contrastText: \"#EAE2B7\",\r\n            },\r\n            secondary: {\r\n                light: \"#FF9B54\",\r\n                main: \"#CE4257\",\r\n                dark: \"#720026\",\r\n                // contrastText: color4,\r\n            },\r\n            common: {\r\n                black: \"#000\",\r\n                white: \"#fff\"\r\n            },\r\n            background: {\r\n                paper: type === \"light\" ? \"#fff\" : \"#372549\",\r\n                default: type === \"light\" ? \"#fafafa\" : \"#1A1423\",\r\n            },\r\n            error: {\r\n                light: \"#e57373\",\r\n                main: \"#CE4257\",\r\n                dark: \"#d32f2f\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            warning: {\r\n                light: \"#ffb74d\",\r\n                main: \"#ff9800\",\r\n                dark: \"#f57c00\",\r\n                contrastText: \"#rgba(0, 0, 0, 0.87\"\r\n            },\r\n            info: {\r\n                light: \"#64b5f6\",\r\n                main: \"#2196f3\",\r\n                dark: \"#1976d2\",\r\n                contrastText: \"#fff\"\r\n            },\r\n            success: {\r\n                light: \"#81c784\",\r\n                main: \"#4caf50\",\r\n                dark: \"#388e3c\",\r\n                contrastText: \"#rgba(0, 0, 0, 0.87\"\r\n            },\r\n            // grey: {\r\n            //     50: \"#fafafa\",\r\n            //     100: \"#f5f5f5\",\r\n            //     200: \"#eeeeee\",\r\n            //     300: \"#e0e0e0\",\r\n            //     400: \"#bdbdbd\",\r\n            //     500: \"#9e9e9e\",\r\n            //     600: \"#757575\",\r\n            //     700: \"#616161\",\r\n            //     800: \"#424242\",\r\n            //     900: \"#212121\",\r\n            //     A100: \"#d5d5d5\",\r\n            //     A200: \"#aaaaaa\",\r\n            //     A400: \"#303030\",\r\n            //     A700: \"#616161\",\r\n            // },\r\n            text: {\r\n                primary: type === \"light\" ? \"#540D6E\" : \"#fff\",\r\n                secondary: type === \"light\" ? \"#540D6E\" : \"#fff\",\r\n                disabled: \"rgba(133, 30, 30, 0.38)\",\r\n                hint: \"rgba(0, 0, 0, 0.38)\"\r\n            }\r\n        },\r\n        typography: {\r\n            fontFamily: 'Raleway, sans-serif',\r\n            // [\r\n            //     '-apple-system',\r\n            //     'BlinkMacSystemFont',\r\n            //     '\"Segoe UI\"',\r\n            //     'Roboto',\r\n            //     '\"Helvetica Neue\"',\r\n            //     'Arial',\r\n            //     'sans-serif',\r\n            //     '\"Apple Color Emoji\"',\r\n            //     '\"Segoe UI Emoji\"',\r\n            //     '\"Segoe UI Symbol\"',\r\n            // ].join(','),\r\n            // Base font size to which variants are relative. Default material-ui is 16px\r\n            fontSize: 14,\r\n            // Modify variants here if needed\r\n            // h6: {\r\n            //     fontSize: \"0.5rem\",\r\n            //     '@media (min-width:600px)': {\r\n            //       fontSize: '1rem',\r\n            //     },\r\n            // }\r\n        },\r\n\r\n    });\r\n\r\n    theme = responsiveFontSizes(theme);\r\n\r\n    return theme\r\n}\r\n\r\n// Misc const used in styles\r\nconst drawerWidth = 240;\r\nconst toolbarHeight = 50;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        /* \r\n            Display and size\r\n        */\r\n        main: {\r\n            backgroundColor: theme.palette.primary.light,\r\n            minWidth: '100%',\r\n            minHeight: '100%',\r\n        },\r\n        flexSpaceBetween: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n        },\r\n        flexCenter: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n        },\r\n        width100: {\r\n            width: '100px',\r\n        },\r\n        spacingRight: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        cardMedia: {\r\n            height: '200px',\r\n        },\r\n        height250: {\r\n            height: '250px',\r\n        },\r\n        height300: {\r\n            height: '300px',\r\n        },\r\n        bottom20: {\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        /* \r\n            Containers\r\n        */\r\n        formPaper: {\r\n            padding: theme.spacing(2),\r\n            color: theme.palette.primary.main,\r\n            width: \"50%\",\r\n            minWidth: '400px',\r\n            margin: \"0 auto\"\r\n        },\r\n        // content: {\r\n        //     flexGrow: 1,\r\n        //     padding: theme.spacing(3),\r\n        //     [theme.breakpoints.up('sm')]: {\r\n        //         marginLeft: `${drawerWidth}px`,\r\n        //     },\r\n\r\n        // },\r\n        // // Can also use this but then change 'content' to 'contentClass' to solve error with abiguity\r\n        // '@media (min-width: 960px)': {\r\n        //     contentCl: {\r\n        //         marginLeft: `${drawerWidth}px`,\r\n        //     },\r\n        // },\r\n        /* \r\n            Images\r\n        */\r\n        jumbotron: {\r\n            minHeight: \"100vh\",\r\n        },\r\n        jumbotronContent: {\r\n            marginTop: `${toolbarHeight}px`,\r\n            position: \"absolute\",\r\n            color: \"#fff\",\r\n            height: \"100vh\",\r\n        },\r\n        jumbotronImg: {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: \"center\",\r\n            zIndex: -1,\r\n            backgroundColor: '#000',    // backgroundImage imported as a component in Layout.tsx\r\n            boxShadow: \"0px 2px 4px -1px rgba(0,0, 0.2)\"\r\n        },\r\n        image: {\r\n            display: \"block\",\r\n            // height: \"auto\", \r\n            width: \"90%\", \r\n            borderRadius: \"3px\",\r\n            margin: \"0 auto\",\r\n        },\r\n        \r\n        /* \r\n            Lists\r\n        */\r\n        pageNavList: {\r\n            paddingTop: \"0px !important\",\r\n            paddingBottom: \"0px !important\",\r\n        },\r\n        /* \r\n            Texts\r\n        */\r\n        noDecoration: {\r\n            textDecoration: 'none',\r\n        },\r\n        center: {\r\n            textAlign: 'center',\r\n        },\r\n\r\n        /* \r\n            Hidden\r\n        */\r\n        hideMdUp: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        hideSmDown: {\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        /* \r\n            Card\r\n        */\r\n        card: {\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            // justifyContent: \"space-between\",\r\n        },\r\n        cardTitle: {\r\n            fontSize: \"0.8rem\",\r\n        },\r\n\r\n        /* \r\n            NavBar\r\n        */\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            // borderBottom: \"none\",\r\n            // boxShadow: \"none !important\",\r\n            // color: \"#fff !important\",\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        toolbar: { \r\n            minHeight: `${toolbarHeight}px !important`,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            // // necessary for content to be below app bar\r\n            // ...theme.mixins.toolbar,\r\n            minHeight: `${toolbarHeight}px !important`,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        contentPadding: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: -drawerWidth,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n\r\n        // Misc\r\n        loading: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            padding: '5%',\r\n            fontSize: '10em',\r\n            color: theme.palette.primary.light,\r\n        },\r\n    })\r\n);\r\n\r\n\r\nexport { useStyles, createTheme };","import React from 'react';\r\nimport { useStyles } from '../../styles/main';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Grid, Button, Typography, Hidden, Grow } from '@material-ui/core';\r\nimport { JumbotronType } from '../../logic/types';\r\nimport jumbotronLight from '../../img/JumbotronLight.png';\r\nimport { PATHS } from '../../constants/data';\r\nconst { main } = PATHS;\r\n\r\n\r\nconst Jumbotron = ({\r\n    img = jumbotronLight,\r\n    title = \"Hello\",\r\n    subtitle = \"Welcome\",\r\n    actions = [],\r\n    onClick\r\n}: JumbotronType) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* Background image */}\r\n            <div className={classes.jumbotronImg} style={{ backgroundImage: `url(${img})` }} />\r\n\r\n            {/* Main content */}\r\n            <Grow timeout={2000} in={true}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={classes.jumbotronContent}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        md={6}\r\n                        container\r\n                        alignItems=\"center\"\r\n                        direction=\"column\"\r\n                    >\r\n                        <Typography variant=\"h2\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            {subtitle}\r\n                        </Typography>\r\n\r\n                        <Grid item container justify=\"center\">\r\n                            {actions && actions.map((action, i) =>\r\n                                <Grid item key={`item-${i}`}>\r\n                                    <Link to={`${action.path}?next=${main}`}>\r\n                                        <Button key={`button-${i}`} style={{ margin: \"0.5em\" }} variant=\"contained\" color=\"primary\" >\r\n                                            {action.name}\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Grid>)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Hidden smDown>\r\n                        <Grid item md={6}>\r\n\r\n                        </Grid>\r\n                    </Hidden>\r\n\r\n                </Grid>\r\n            </Grow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React, { useState } from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { ModeType } from '../logic/types';\r\n\r\n// TODO: Add update user if user logged in and switches the dark mode on/off\r\ninterface Props {\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    style?: object,\r\n}\r\n\r\n\r\nconst DarkModeSwitch = ({ mode, setDarkMode, style }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    // Toggle mode light/dark\r\n    const [state, setState] = useState({\r\n        darkModeChecked: mode === \"dark\",\r\n    });\r\n\r\n    const changeDarkMode = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const darkModeChecked = event.target.checked;\r\n        setState({ ...state, [event.target.name]: darkModeChecked });\r\n        setDarkMode(darkModeChecked ? \"dark\" : \"light\");\r\n    };\r\n\r\n\r\n    return (\r\n        <Typography style={style} variant=\"subtitle2\" noWrap>\r\n            Dark Mode\r\n            <Switch\r\n                checked={state.darkModeChecked}\r\n                onChange={changeDarkMode}\r\n                name=\"darkModeChecked\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default DarkModeSwitch;","import React from 'react';\r\nimport { useStyles } from '../../styles/main';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { UserType } from '../../logic/types';\r\nimport { PATHS } from '../../constants/data';\r\nconst { home, login, logout, register } = PATHS;\r\n\r\n// Set text on auth buttons dependent on whether a user is logged in or not\r\nconst getText = (user: UserType) => {\r\n    return {\r\n        register: !user ? 'Join the other side' : `Hey there, ${user.publicName}`,\r\n        login: !user ? 'Show your face' : 'Exit the planet',\r\n    };\r\n};\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    style?: object,\r\n}\r\n\r\nexport const AuthButtonsHorizontal = ({ user, style }: Props) => {\r\n    let signUpButton = (\r\n        <Link to={!user ? register : '/'}>\r\n            <Button style={{ margin: \"0 15px\" }} color=\"inherit\">\r\n                {getText(user).register}\r\n            </Button>\r\n        </Link>\r\n    );\r\n\r\n    let loginButton = (\r\n        <Link to={!user ? login : logout}>\r\n            <Button variant=\"outlined\" color=\"secondary\">\r\n                {getText(user).login}\r\n            </Button>\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <Box style={style}>\r\n            {signUpButton}\r\n            {loginButton}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const AuthButtonsVertical = ({ user, style }: Props) => {\r\n    const classes = useStyles();\r\n    // TODO: resolve error 'div cannot be child of p'\r\n    let signUpButton = (\r\n        <ListItem button component={!user ? Link : Typography} to={!user ? register : ''}>\r\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n            <ListItemText primary={getText(user).register} />\r\n        </ListItem>\r\n    );\r\n\r\n    let loginButton = (\r\n        <ListItem button component={Link} to={!user ? login : logout}>\r\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n            <ListItemText primary={getText(user).login} />\r\n        </ListItem>\r\n    );\r\n\r\n    return (\r\n        <List style={style} >\r\n            {signUpButton}\r\n            {loginButton}\r\n        </List>\r\n    );\r\n}; \r\n","import React from 'react';\r\nimport { useStyles } from '../../styles/main';\r\nimport { Theme } from '@material-ui/core/styles';\r\nimport { Drawer, List, ListItem, ListItemText, Divider, IconButton, Hidden } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DarkModeSwitch from '../DarkModeSwitch';\r\nimport { AuthButtonsVertical } from './AuthButtons';\r\nimport { CATEGORIES } from '../../constants/data';\r\nimport { DrawerVariantType, ModeType, UserType } from '../../logic/types';\r\n\r\n\r\ninterface Props {\r\n  user: UserType,\r\n  theme: Theme,\r\n  mode: ModeType,\r\n  setDarkMode: any,\r\n  open: boolean,\r\n  toggleDrawer: any,\r\n  changeQuery: any,\r\n  variant?: DrawerVariantType,\r\n}\r\n\r\n// This component can be either temporary or persistent. By default temporary. use prop 'variant' to change to \"persistent\"\r\nconst MenuDrawer = ({ user, variant = \"temporary\", theme, mode, setDarkMode, open, toggleDrawer, changeQuery }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant={variant}\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={toggleDrawer(false)}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={toggleDrawer(false)}>\r\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      <List>\r\n        {CATEGORIES.map((text, index) => (\r\n          <ListItem button key={text} onClick={changeQuery(text)}>\r\n            {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Hidden mdUp>\r\n        <Divider />\r\n        <AuthButtonsVertical user={user} />\r\n      </Hidden>\r\n\r\n      <Divider />\r\n      <DarkModeSwitch style={{ marginLeft: \"auto\" }} mode={mode} setDarkMode={setDarkMode} />\r\n\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default MenuDrawer;","import React from 'react';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children: React.ReactElement;\r\n}\r\n\r\nconst HideOnScroll = (props: Props) => {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({ target: window && window() });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default HideOnScroll;","import React from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../styles/main';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, IconButton, Hidden } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HideOnScroll from '../../utils/HideOnScroll';\r\nimport { AuthButtonsHorizontal } from './AuthButtons';\r\nimport { ModeType, UserType } from '../../logic/types';\r\nimport { PATHS } from '../../constants/data';\r\nconst { landing, home, login, logout, register } = PATHS;\r\n\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    name: string,\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    open: boolean,\r\n    handleDrawerOpen: any,\r\n    handleDrawerClose: any,\r\n}\r\n\r\n\r\nconst NavBar = ({ user, name, mode, setDarkMode, open, handleDrawerOpen, handleDrawerClose }: Props) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const path = location.pathname;\r\n\r\n    return (\r\n        <HideOnScroll>\r\n            <AppBar\r\n                color=\"primary\"\r\n                // position=\"absolute\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to={home}>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            {name}\r\n                        </Typography>\r\n                    </Link>\r\n                    \r\n                    {/* Show auth buttons only on other pages than authentication or home (includes those buttons on the jumbotron) */}\r\n                    {![landing, home, login, logout, register].includes(path) &&\r\n                        <Hidden smDown>\r\n                            <AuthButtonsHorizontal style={{ marginLeft: \"auto\" }} user={user} />\r\n                        </Hidden>}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </HideOnScroll>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useStyles, createTheme } from '../../styles/main';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Jumbotron from '../navigation/Jumbotron';\r\nimport MenuDrawer from '../navigation/MenuDrawer';\r\nimport NavBar from '../navigation/NavBar';\r\nimport { DrawerType, ModeType, JumbotronType, UserType } from '../../logic/types';\r\n\r\n// TODO: remove changeQuery from here\r\n/*\r\n  This component should serve as a wrapper for all pages. \r\n  Jumbotron is optional.\r\n*/\r\ninterface Props {\r\n  user: UserType,\r\n  children: React.ReactChild,\r\n  jumbotron?: JumbotronType,\r\n  drawer?: DrawerType,\r\n  mode: ModeType,\r\n  setDarkMode: any,\r\n  changeQuery: any,\r\n}\r\n\r\nconst Layout = ({\r\n  user,\r\n  children,\r\n  jumbotron,\r\n  drawer,\r\n  mode,\r\n  setDarkMode,\r\n  changeQuery,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n  const theme = createTheme(mode);\r\n\r\n  // Drawer functions\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const toggleDrawer = (open: boolean) => (\r\n    event: React.KeyboardEvent | React.MouseEvent,\r\n  ) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      ((event as React.KeyboardEvent).key === 'Tab' ||\r\n        (event as React.KeyboardEvent).key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setOpen(open);\r\n  };\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <NavBar\r\n        user={user}\r\n        name=\"Monsters Gallery\"\r\n        mode={mode}\r\n        setDarkMode={setDarkMode}\r\n        open={open}\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        handleDrawerClose={handleDrawerClose}\r\n      />\r\n\r\n      <MenuDrawer\r\n        user={user}\r\n        {...drawer}\r\n        theme={theme}\r\n        mode={mode}\r\n        setDarkMode={setDarkMode}\r\n        open={open}\r\n        changeQuery={changeQuery}\r\n        toggleDrawer={toggleDrawer}\r\n      />\r\n\r\n      {jumbotron && <Jumbotron {...jumbotron} />}\r\n\r\n      <main className={drawer && drawer.variant === \"persistent\" ? clsx(classes.content, {\r\n        [classes.contentShift]: open,\r\n      }) : classes.contentPadding}\r\n      >\r\n        <div className={jumbotron ? classes.jumbotron : classes.drawerHeader} />\r\n\r\n        {children}\r\n\r\n      </main>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Typography } from '@material-ui/core';\r\nimport { PostType } from '../logic/types';\r\n// import { LinearBuffer } from './Loading';\r\n\r\nconst Post = ({ title, subtitle, body, content }: PostType) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h4\">\r\n                {title}\r\n            </Typography>\r\n\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n                {subtitle}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" gutterBottom>\r\n                {body}\r\n            </Typography>\r\n            \r\n                {content}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Grid, Divider, Hidden, Typography } from '@material-ui/core';\r\nimport Post from '../Post';\r\nimport { PostLayoutType } from '../../logic/types';\r\n/* \r\n    This component is used on home and main pages and is meant to display on post composed of the main content\r\n    (text and/or media content) on the left taking most of the width, and additional related content on the right (e.g. links)\r\n    'id' prop must be provided correctly for the table of contents to work (it uses #foo url elements)\r\n*/\r\n\r\nconst PostLayout = ({ id, additional, ...props }: PostLayoutType) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* Middle area - main content by post */}\r\n            <Grid item id={id} xs={12} md={10}>\r\n                <Divider style={{ marginTop: \"2em\", marginBottom: \"2em\" }} />\r\n                <Post {...props} />\r\n            </Grid>\r\n\r\n            {/* Right area - Additional content by post */}\r\n            <Hidden smDown>\r\n                <Grid item xs={2}>\r\n                    <Divider style={{ marginTop: \"2em\", marginBottom: \"2em\" }} />\r\n\r\n                    {additional &&\r\n                        <React.Fragment>\r\n                            <Typography variant=\"h4\" style={{ marginBottom: \"0.45em\" }}>\r\n                                Cool stuff:\r\n                            </Typography>\r\n\r\n                            {additional}\r\n                        </React.Fragment>}\r\n\r\n                </Grid>\r\n            </Hidden>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PostLayout;","import React from 'react';\r\nimport { useStyles } from '../../styles/main';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { ActionType } from '../../logic/types';\r\n\r\ninterface Props {\r\n    items: Array<ActionType>\r\n}\r\n// TODO: investigate why Link from router does not handle hashes #\r\nconst ContentsList = ({ items }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List>\r\n            {items.map((item, i) =>\r\n                <Link key={`link-item-${i}`} to={item.path} smooth={true}>\r\n                    <ListItem key={`item-${i}`} className={classes.pageNavList} button>\r\n                        <ListItemText key={`item-text-${i}`} primary={`${item.name.substring(0, 15)}...`} />\r\n                    </ListItem>\r\n                </Link>\r\n            )}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default ContentsList;","/* \r\n    This component is used on home and main pages and is meant to display the list of contents on the left,\r\n    posts (texts and/or media content) in the middle, and additional related content on the right next to each post (e.g. links)\r\n    'id' prop must be provided correctly for the table of contents to work (it uses #foo url elements)\r\n*/\r\n\r\nimport React from 'react';\r\nimport { Container, Grid, Divider, Hidden, Typography } from '@material-ui/core';\r\nimport PostLayout from './Post';\r\nimport ContentsList from '../navigation/ContentsList';\r\nimport { FeedLayoutType } from '../../logic/types';\r\n\r\nconst FeedLayout = ({ posts }: FeedLayoutType) => {\r\n    const contentsList = posts.map(post => ({ name: post.title, path: `#${post.id}` }))\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <Grid container spacing={2}>\r\n                {/* Left area - navigation menu for the whole page */}\r\n                <Hidden mdDown>\r\n                    <Grid item xs={2}>\r\n                        <Divider style={{ marginTop: \"2em\", marginBottom: \"2em\" }} />\r\n\r\n                        <Typography variant=\"h4\" style={{ marginBottom: \"0.45em\" }}>\r\n                            Jump to:\r\n                        </Typography>\r\n\r\n                        <ContentsList items={contentsList} />\r\n                    </Grid>\r\n                </Hidden>\r\n\r\n                {/* Main area by post */}\r\n                <Grid container item xs={12} lg={10} spacing={2}>\r\n                    {posts && posts.map((post, i) =>\r\n                        <PostLayout key={i} {...post} />)}\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FeedLayout;","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Typography, LinearProgress, CircularProgress } from '@material-ui/core';\r\n\r\nexport const Loading = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Empty = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <i className=\"optin monster icon\" style={{color: \"#fff\"}} />\r\n            <Typography variant=\"h5\" style={{color: \"#fff\"}}>Oops... Nothing found. Lazy, lazy...</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const LinearBuffer = () => {\r\n    // const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [buffer, setBuffer] = React.useState(10);\r\n  \r\n    const progressRef = React.useRef(() => {});\r\n    React.useEffect(() => {\r\n      progressRef.current = () => {\r\n        if (progress > 100) {\r\n          setProgress(0);\r\n          setBuffer(10);\r\n        } else {\r\n          const diff = Math.random() * 10;\r\n          const diff2 = Math.random() * 10;\r\n          setProgress(progress + diff);\r\n          setBuffer(progress + diff + diff2);\r\n        }\r\n      };\r\n    });\r\n  \r\n    React.useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        progressRef.current();\r\n      }, 500);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n  \r\n    return (\r\n      <div style={{ width: \"100%\", paddingTop: \"2.5em\"}}>\r\n        <LinearProgress \r\n            variant=\"buffer\" \r\n            value={progress} \r\n            valueBuffer={buffer} \r\n            color=\"secondary\"\r\n        />\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\n// import { useStyles } from '../styles/main';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\n// import ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\r\n// import SaveAltIcon from '@material-ui/icons/SaveAlt';\r\n// import ShareIcon from '@material-ui/icons/ShareIcon';\r\nimport { ModeType, UserType } from '../logic/types';\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    mode: ModeType,\r\n    comments: Array<object>,\r\n    likes: Array<object>,\r\n    handleExpandClick: any,\r\n    expanded: boolean,\r\n}\r\n\r\nexport const ActionButtons = ({\r\n    user,\r\n    mode,\r\n    comments,\r\n    likes,\r\n    handleExpandClick,\r\n    expanded\r\n}: Props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton style={{marginLeft: \"auto\"}} aria-label=\"add to favorites\">\r\n                {/* <Typography variant=\"caption\">{likes.length}</Typography> */}\r\n                <FavoriteBorderOutlinedIcon color={mode === \"light\" ? \"primary\" : undefined} />\r\n            </IconButton>\r\n            {/* <IconButton aria-label=\"share\">\r\n                <SaveAltIcon />\r\n            </IconButton> */}\r\n            {/* <IconButton\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ModeCommentOutlinedIcon />\r\n                <Typography variant=\"caption\">{comments.length}</Typography>\r\n            </IconButton> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { \r\n    Card, \r\n    // CardMedia, \r\n    // CardMediaTypeMap, \r\n    // CardHeader, \r\n    CardContent, \r\n    CardActions, \r\n    // IconButton, \r\n    Typography } from '@material-ui/core';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { ActionButtons } from './ActionButtons';\r\n// import { CardMenu } from './Menu';\r\n// import { CommentsSection } from './CommentsSection';\r\nimport { CommentType } from '../logic/types';\r\nimport { ModeType, UserType } from '../logic/types'; \r\n\r\ninterface Props {\r\n    user: UserType,\r\n    mode: ModeType,\r\n    object: { _id: string },\r\n    model: string,\r\n    comments: Array<CommentType>,\r\n    likes: Array<object>,\r\n    users: Map<string, any>,\r\n    title: string,\r\n    subtitle: string,\r\n    body: string,\r\n    mediaTop?: any,\r\n    mediaMiddle?: any,\r\n    menuItems: Array<{ name: string }>,\r\n    // updateStateData: any // or void?\r\n}\r\n\r\n// Pass a component to mediaTop or mediaBottom depending on which location it is needed in\r\nexport const MonsterCard = ({\r\n    user,\r\n    mode,\r\n    // object,\r\n    // model,\r\n    comments,\r\n    likes,\r\n    // users,\r\n    title,\r\n    // subtitle,\r\n    body,\r\n    mediaTop,\r\n    mediaMiddle,\r\n    // menuItems,\r\n    // updateStateData,\r\n}: Props) => {\r\n    const classes = useStyles();\r\n    // TODO: figure out how to declare it in typescript\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    // const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    // const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handleMenuClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <Card className={classes.card} >\r\n            {mediaTop && mediaTop}\r\n            {/* <CardHeader\r\n                avatar={null}\r\n                // action={\r\n                //     <IconButton\r\n                //         aria-label=\"more\"\r\n                //         aria-controls=\"long-menu\"\r\n                //         aria-haspopup=\"true\"\r\n                //         onClick={handleMenuClick}\r\n                //     >\r\n                //         <MoreVertIcon />\r\n                //     </IconButton>\r\n                // }\r\n                title={title}\r\n                subheader={subtitle}\r\n            /> */}\r\n            {/* <CardMenu\r\n                user={user}\r\n                object={object}\r\n                model={model}\r\n                anchorEl={anchorEl}\r\n                handleMenuClose={handleMenuClose}\r\n                menuItems={menuItems}\r\n            /> */}\r\n            {mediaMiddle ? mediaMiddle : null}\r\n            <CardContent>\r\n                <Typography noWrap variant=\"h6\" color=\"textPrimary\">\r\n                    {title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {body}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ marginTop: \"auto\" }} disableSpacing>\r\n                <ActionButtons \r\n                    user={user} \r\n                    mode={mode}\r\n                    comments={comments} \r\n                    likes={likes} \r\n                    handleExpandClick={handleExpandClick} \r\n                    expanded={expanded}\r\n                />\r\n            </CardActions>\r\n            {/* <CardContent>\r\n                <CommentsSection\r\n                    expanded={expanded}\r\n                    user={user}\r\n                    object={object}\r\n                    model={model}\r\n                    comments={comments}\r\n                    users={users}\r\n                />\r\n            </CardContent> */}\r\n        </Card>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Grid, CardMedia, Tabs, Tab } from '@material-ui/core';\r\nimport { LinearBuffer } from '../components/Loading'\r\nimport { MonsterCard } from '../components/Card'\r\nimport { ModeType, MonsterType, UserType } from '../logic/types';\r\nimport { CATEGORIES } from '../constants/data';\r\n// import jumbotronDark from '../img/JumbotronDark.png';\r\n// import jumbotronLight from '../img/JumbotronLight.png';\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    data: Array<{ title: string, src: string }>\r\n    mode: ModeType,\r\n    changeQuery: any,\r\n}\r\n\r\nconst Gallery = ({ user, data, mode, changeQuery }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    // TODO: Handle timeout\r\n    return (\r\n        data && data.length > 0 ? (\r\n            <React.Fragment>\r\n                <Tabs\r\n                    style={{ marginTop: \"1.5em\" }}\r\n                    value={value}\r\n                    variant=\"scrollable\"\r\n                    indicatorColor=\"primary\"\r\n                    scrollButtons=\"auto\"\r\n                    textColor={mode === \"light\" ? \"primary\" : undefined}\r\n                    onChange={handleChange}\r\n                // aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab label=\"Random\" />\r\n                    {CATEGORIES.map((text, index) => (\r\n                        <Tab key={index} label={text} onClick={changeQuery(text)} />\r\n                    ))}\r\n                </Tabs>\r\n\r\n                <Grid\r\n                    container\r\n                    item\r\n                    direction=\"row\"\r\n                    // justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    xs={12}\r\n                    spacing={2}\r\n                    style={{ marginTop: \"1em\" }}\r\n                >\r\n                    {data.map((monster: MonsterType, index: Number) =>\r\n                        <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={`g2-${index}`}>\r\n                            <MonsterCard\r\n                                key={parseInt(index.toString())}\r\n                                user={user}\r\n                                mode={mode}\r\n                                object={{ _id: \"1234\" }}\r\n                                model=\"Monster\"\r\n                                comments={[]}\r\n                                likes={[]}\r\n                                users={new Map()}\r\n                                title={monster.title}\r\n                                subtitle={`No${parseInt(index.toString()) + 1}`}\r\n                                body={monster.title}\r\n                                mediaTop={<CardMedia className={classes.cardMedia} image={monster.src}>\r\n                                    {/* <IconButton style={{float: \"right\"}} aria-label=\"add to favorites\">\r\n                    <FavoriteBorderOutlinedIcon />\r\n                </IconButton> */}\r\n                                </CardMedia>}\r\n                                menuItems={[{ name: 'Share monster' }]}\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </React.Fragment>\r\n        ) : (\r\n                <LinearBuffer />\r\n            )\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport { guestPage } from '../utils/authenticatedPage';\r\nimport { withPush } from '../utils/routingDecorators';\r\nimport { useStyles } from '../styles/main';\r\nimport Layout from '../components/layouts/Main';\r\nimport FeedLayout from '../components/layouts/Feed';\r\nimport Gallery from '../components/Gallery';\r\nimport ContentsList from '../components/navigation/ContentsList';\r\nimport { DataItemType, ModeType, UserType } from '../logic/types';\r\nimport { PATHS } from '../constants/data';\r\nimport jumbotronDark from '../img/JumbotronDark.png';\r\nimport jumbotronLight from '../img/JumbotronLight.png';\r\n// const Gallery = React.lazy(() => import('../components/Gallery'));\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    query: string,\r\n    data: Array<DataItemType>\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    changeQuery: any,\r\n    push: string,\r\n}\r\n\r\nconst Home = ({ user, query, data, mode, setDarkMode, changeQuery, push }: Props) => {\r\n    const classes = useStyles();\r\n    const { login, register } = PATHS;\r\n    \r\n    return (\r\n        <Layout\r\n            user={user}\r\n            jumbotron={{\r\n                img: mode === \"dark\" ? jumbotronDark : jumbotronLight,\r\n                title: \"Hello, stranger\",\r\n                subtitle: \"Welcome to our world\",\r\n                actions: [\r\n                    { name: \"Join the other side\", path: register },\r\n                    { name: \"Show your true face\", path: login },\r\n                ],\r\n                onClick: undefined,\r\n            }}\r\n            mode={mode}\r\n            setDarkMode={setDarkMode}\r\n            changeQuery={changeQuery}\r\n        >\r\n            <FeedLayout posts={[\r\n                {\r\n                    id: \"intro\",\r\n                    title: \"Blablabla this page is nonsense, just for show\",\r\n                    subtitle: \"kxkaro, 21/06/2020 15:25\",\r\n                    body: `Prow scuttle parrel provost Sail ho shrouds spirits boom mizzenmast yardarm. Pinnace holystone mizzenmast quarter crow's nest nipperkin grog yardarm hempen halter furl. Swab barque interloper chantey doubloon starboard grog black jack gangway rutters.\r\n                    \r\n                    Deadlights jack lad schooner scallywag dance the hempen jig carouser broadside cable strike colors. Bring a spring upon her cable holystone blow the man down spanker Shiver me timbers to go on account lookout wherry doubloon chase. Belay yo-ho-ho keelhaul squiffy black spot yardarm spyglass sheet transom heave to.\r\n                    \r\n                    Trysail Sail ho Corsair red ensign hulk smartly boom jib rum gangway. Case shot Shiver me timbers gangplank crack Jennys tea cup ballast Blimey lee snow crow's nest rutters. Fluke jib scourge of the seven seas boatswain schooner gaff booty Jack Tar transom spirits.`,                    \r\n                },\r\n                {\r\n                    id: \"gallery\",\r\n                    title: \"See our collection of monsters\",\r\n                    subtitle: \"kxkaro, 21/06/2020 14:25\",\r\n                    body: `Data collected from the whole world wide web.`,\r\n                    content: <Gallery user={user} changeQuery={changeQuery} data={data} mode={mode} />,\r\n                    additional: <ContentsList items={[{ name: \"Dungeons\", path: \"#\" }, { name: \"Dragons\", path: \"#\" }]} />            \r\n                },\r\n                {\r\n                    id: \"outro\",\r\n                    title: \"Hope you enjoyed it, bye!\",\r\n                    subtitle: \"kxkaro, 21/06/2020 12:25\",\r\n                    body: `Pieces of Eight bowsprit Sink me Gold Road sheet keelhaul grog blossom chandler fore crack Jennys tea cup. Crimp hang the jib gibbet parley grog blossom loot rutters jib scuppers spike. Black jack scallywag bucko Jack Ketch run a shot across the bow fore port pillage squiffy blow the man down.\r\n                    \r\n                    Chantey bilge water bilge me main sheet red ensign Jolly Roger take a caulk jib topmast. Doubloon Sink me bilge rat deadlights fire in the hole gangplank hardtack dance the hempen jig keel scuppers. Loot ye jolly boat mizzen yawl black jack square-rigged yardarm bounty Jack Ketch.\r\n                    \r\n                    Interloper scourge of the seven seas scuttle take a caulk Pieces of Eight plunder aft pirate snow avast. Hang the jib pillage rigging jury mast fluke hornswaggle Buccaneer nipperkin cutlass tackle. Lookout Jolly Roger ahoy parrel salmagundi Nelsons folly nipper holystone lugger wherry.`,\r\n                }\r\n            ]} />\r\n        </Layout>\r\n    );\r\n}\r\n\r\n\r\nexport default guestPage(withPush(Home));","import React from 'react';\r\nimport { authenticatedPage } from '../utils/authenticatedPage';\r\nimport { withPush } from '../utils/routingDecorators';\r\nimport { useStyles } from '../styles/main';\r\nimport Layout from '../components/layouts/Main';\r\nimport FeedLayout from '../components/layouts/Feed';\r\nimport Gallery from '../components/Gallery';\r\nimport ContentsList from '../components/navigation/ContentsList';\r\nimport { ModeType, DataItemType, UserType } from '../logic/types';\r\n\r\ninterface Props {\r\n    user: UserType,\r\n    query: string,\r\n    data: Array<DataItemType>\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    changeQuery: any,\r\n    push: string,\r\n}\r\n\r\nconst Monsters = ({ user, query, data, mode, setDarkMode, changeQuery, push }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Layout\r\n            user={user}\r\n            mode={mode}\r\n            setDarkMode={setDarkMode}\r\n            changeQuery={changeQuery}\r\n        >\r\n            <FeedLayout posts={[\r\n                {\r\n                    id: \"intro\",\r\n                    title: \"Blablabla this page is nonsense, just for show\",\r\n                    subtitle: \"kxkaro, 21/06/2020 15:25\",\r\n                    body: `Prow scuttle parrel provost Sail ho shrouds spirits boom mizzenmast yardarm. Pinnace holystone mizzenmast quarter crow's nest nipperkin grog yardarm hempen halter furl. Swab barque interloper chantey doubloon starboard grog black jack gangway rutters.\r\n                    <br/><br/>\r\n                    Deadlights jack lad schooner scallywag dance the hempen jig carouser broadside cable strike colors. Bring a spring upon her cable holystone blow the man down spanker Shiver me timbers to go on account lookout wherry doubloon chase. Belay yo-ho-ho keelhaul squiffy black spot yardarm spyglass sheet transom heave to.\r\n                    <br/><br/>\r\n                    Trysail Sail ho Corsair red ensign hulk smartly boom jib rum gangway. Case shot Shiver me timbers gangplank crack Jennys tea cup ballast Blimey lee snow crow's nest rutters. Fluke jib scourge of the seven seas boatswain schooner gaff booty Jack Tar transom spirits.`,                    \r\n                },\r\n                {\r\n                    id: \"gallery\",\r\n                    title: \"See our collection of monsters\",\r\n                    subtitle: \"kxkaro, 21/06/2020 14:25\",\r\n                    body: `Data collected from the whole world wide web.`,\r\n                    content: <Gallery user={user} changeQuery={changeQuery} data={data} mode={mode} />,\r\n                    additional: <ContentsList items={[{ name: \"Dungeons\", path: \"#\" }, { name: \"Dragons\", path: \"#\" }]} />\r\n                },\r\n                {\r\n                    id: \"outro\",\r\n                    title: \"Hope you enjoyed it, bye!\",\r\n                    subtitle: \"kxkaro, 21/06/2020 12:25\",\r\n                    body: `Pieces of Eight bowsprit Sink me Gold Road sheet keelhaul grog blossom chandler fore crack Jennys tea cup. Crimp hang the jib gibbet parley grog blossom loot rutters jib scuppers spike. Black jack scallywag bucko Jack Ketch run a shot across the bow fore port pillage squiffy blow the man down.\r\n                    <br/><br/>\r\n                    Chantey bilge water bilge me main sheet red ensign Jolly Roger take a caulk jib topmast. Doubloon Sink me bilge rat deadlights fire in the hole gangplank hardtack dance the hempen jig keel scuppers. Loot ye jolly boat mizzen yawl black jack square-rigged yardarm bounty Jack Ketch.\r\n                    <br/><br/>\r\n                    Interloper scourge of the seven seas scuttle take a caulk Pieces of Eight plunder aft pirate snow avast. Hang the jib pillage rigging jury mast fluke hornswaggle Buccaneer nipperkin cutlass tackle. Lookout Jolly Roger ahoy parrel salmagundi Nelsons folly nipper holystone lugger wherry.`,\r\n                }\r\n            ]} />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default authenticatedPage(withPush(Monsters));","import React from 'react';\r\n\r\n/* \r\n    Below methods inject properties 'error' and 'touched' to Field components provided to the AppForm as children.\r\n    Validation takes place at the parent 'Formik' component in AppForm and fields are provided as children.\r\n    The methods are applied as we want to inject only one relevant 'error' and 'touched' value to each field, instead of the whole objects.\r\n*/\r\n\r\n// Return a value for 'name' only if object keys include 'name'\r\nconst getValue = (obj: object, name: string) => {\r\n    for (const [key, value] of Object.entries(obj || {})) {\r\n        if (key === name) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n\r\n// Injects 'error' and 'touched' prop to a single child component\r\nexport const withValidation = (child: React.ReactElement, errors: object, touched: object, i: number) =>\r\n    React.cloneElement(child, {\r\n        key: i,\r\n        error: getValue(errors, child.props.name),\r\n        touched: getValue(touched, child.props.name),\r\n    })\r\n\r\n// Injects 'error' and 'touched' prop to a group of component\r\nexport const withValidationList = (children: Array<React.ReactElement>, errors: object, touched: object) =>\r\n    [children].flat().map((child, i) =>\r\n        child && withValidation(child, errors, touched, i)\r\n    )","import React, { useState } from 'react';\r\nimport { useStyles } from '../../styles/main';\r\nimport { Formik, Form } from 'formik';\r\nimport { Grid, Paper, Button, Typography, Hidden } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { withValidationList } from '../../utils/withValidation';\r\nimport image from '../../img/Register.png'\r\nimport { ModeType } from '../../logic/types';\r\n\r\n// const EmailValidator = _;\r\n// TODO: add a mechanism from router to make sure user wants to close the window if the forms are partially filled but not submitted\r\ninterface Props {\r\n    mode: ModeType,\r\n    initialValues: object,\r\n    onSubmit?: any,\r\n    validate?: any,\r\n    validationSchema?: any,\r\n    children: any,\r\n    child?: any,\r\n}\r\n\r\n/* \r\n    Raw form to use in components with paper.\r\n    Provide either validate or validationSchema\r\n*/\r\n// TODO: handle providing both validate and validationSchema / provide validate as a function\r\nexport const AppForm = ({ mode, initialValues, onSubmit, validationSchema, children }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    // Disable submit button if errors appear, enable if all input values meet validation criteria\r\n    const [submitDisabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            // validate={validate}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ errors, touched }) => {\r\n                return <Form>\r\n                    <Grid item>\r\n                        {/* \r\n                            [].flat applied as 'children' might be an array of components (Login, Register) or a single component (Logout) \r\n                            Extra check if child is not undefined as the Login form includes 'undefined' in place of other fields from \"Register\" page.\r\n                            TODO: Consider changing this behavior in the auth form for \"login\"\r\n                        */}\r\n                        {withValidationList(children, errors, touched)}\r\n\r\n                        <Button\r\n                            disabled={submitDisabled}\r\n                            style={{ marginTop: \"35px\", width: \"100%\" }}\r\n                            variant={mode === \"dark\" ? \"outlined\" : \"contained\"}\r\n                            color={mode === \"dark\" ? undefined : \"primary\"}\r\n                            type=\"submit\"\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Form>\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\ninterface GridFormProps {\r\n    children: React.ReactChild | Array<React.ReactChild | undefined> | undefined,\r\n    title?: string,\r\n    error?: string,\r\n}\r\n\r\n// Centered form wrapped in a grid on paper\r\nexport const AppFormLayout = ({ children, title, error }: GridFormProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.formPaper}>\r\n            <Grid container direction=\"row\" spacing={2}>\r\n\r\n                <Hidden smDown>\r\n                    <Grid item md={6}>\r\n                        <img className={classes.image} src={image} />\r\n                    </Grid>\r\n                </Hidden>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"space-evenly\"\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                >\r\n                    {title && <Grid item>\r\n                        <Typography align=\"center\" variant=\"h4\" gutterBottom>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>}\r\n\r\n                    {error && <Grid item>\r\n                        <Alert style={{ margin: \"1em auto\" }} variant=\"filled\" severity=\"error\">\r\n                            {error}\r\n                        </Alert>\r\n                    </Grid>}\r\n\r\n                    {children}\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { createStyles, fade, Theme, ThemeProvider, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { Field } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid, { GridSize } from '@material-ui/core/Grid';\r\nimport { InputLabel, MenuItem, FormControl, Typography } from '@material-ui/core';\r\nimport { InputType, ModeType } from '../../logic/types';\r\n\r\ninterface FieldItem {\r\n  _id: string,\r\n  title: string\r\n}\r\n\r\ninterface Props {\r\n  xs?: GridSize,\r\n  sm?: GridSize,\r\n  md?: GridSize,\r\n  lg?: GridSize,\r\n  xl?: GridSize,\r\n  mode?: ModeType,\r\n  error?: string | undefined,\r\n  touched?: boolean,\r\n  name: string,\r\n  id: string,\r\n  label: string,\r\n  type?: InputType,\r\n  required?: boolean,\r\n  as?: React.ElementType,\r\n  items?: Array<FieldItem>,\r\n}\r\n\r\nconst DarkTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'rgba(255, 255, 255, 0.87)',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'rgba(255, 255, 255, 0.87)',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'rgba(255, 255, 255, 0.87)',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const GridField = ({ xs, sm, md, lg, xl, error, touched, mode, ...fieldProps }: Props) => {\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\r\n      <Field\r\n        as={mode === \"dark\" ? DarkTextField : TextField}\r\n        fullWidth\r\n        margin=\"dense\"\r\n        error={touched && error !== undefined}\r\n        helperText={touched && error ? error : undefined}\r\n        {...fieldProps}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const GridFieldSelect = ({ id, label, items, xs, sm, md, lg, xl, ...fieldProps }: Props) => {\r\n  // const classes = useStyles();\r\n  const labelId = `${id}-label`;\r\n\r\n  const menuItems = items &&\r\n    items.map((item: FieldItem) => (\r\n      <MenuItem key={item._id} value={item._id}>\r\n        {item.title}\r\n      </MenuItem>\r\n    ));\r\n\r\n  return (\r\n    <Grid item xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id={labelId}>{label}</InputLabel>\r\n        <Field id={id} labelId={labelId} {...fieldProps}>\r\n          {menuItems}\r\n        </Field>\r\n      </FormControl>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport EmailValidator from 'email-validator';\r\nimport * as Yup from 'yup';\r\nimport { AppFormLayout, AppForm } from './AppForm';\r\nimport { GridField } from './GridFields';\r\nimport { ModeType } from '../../logic/types';\r\n\r\ninterface Props {\r\n    mode: ModeType,\r\n    register: boolean,\r\n    initialValues: object,\r\n    onSubmit: any,\r\n    error?: string,\r\n}\r\n\r\n// TODO: Add checkbox for 'stay logged in' and use cookies for keeping auth\r\nconst AuthForm = ({ mode, register, initialValues, onSubmit, error }: Props) => {\r\n\r\n    const validationSchema = (values: any) => Yup.object().shape({\r\n        email: Yup.string()\r\n            .email()\r\n            .required(\"Required\"),\r\n        password: Yup.string()\r\n            .required(\"No password provided.\")\r\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n    })\r\n\r\n    return (\r\n        <AppFormLayout\r\n            title={register ? 'Register' : 'Login'}\r\n            error={error}\r\n        >\r\n            <AppForm\r\n                mode={mode}\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={register && validationSchema}\r\n            >\r\n                <GridField\r\n                    mode={mode}\r\n                    required\r\n                    name=\"email\"\r\n                    id=\"auth-email\"\r\n                    label={`${!register ? 'Username / ' : ''}E-mail`}\r\n                />\r\n\r\n                {register && <GridField\r\n                    mode={mode}\r\n                    required\r\n                    name=\"username\"\r\n                    id=\"auth-username\"\r\n                    label=\"Username\"\r\n                />}\r\n\r\n                <GridField\r\n                    mode={mode}\r\n                    required\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"auth-password\"\r\n                    label=\"Password\"\r\n                />\r\n            </AppForm>\r\n        </AppFormLayout>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst sendRawPostRequest = (url: string, data: any) =>\r\n    axios({\r\n        method: 'post',\r\n        url,\r\n        data: qs.stringify(data),\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n        },\r\n    }).then(response => response.data);\r\n\r\nexport default {\r\n    login: (password: string, email:string) => \r\n        sendRawPostRequest('/api/auth/login', { password, email }),\r\n\r\n    logout: () => \r\n        axios.post('/api/auth/logout').then(response => response.data),\r\n\r\n    register: (username: string, password: string, email: string) =>\r\n        sendRawPostRequest('/api/auth/register', { username, password, email }),\r\n        \r\n    whoAmI: () =>\r\n        axios\r\n            .get('/api/auth/whoami')\r\n            .then(response => response.data)\r\n            .catch(error => ({ user: null })),\r\n};\r\n","import { withNext, withPush } from './routingDecorators';\r\nimport { withRouter } from 'react-router';\r\n\r\n// HOC for pages rendered as a side effect of accessing another page, e.g.\r\n// a Login form displayed when rendering a forbidded page.\r\n//\r\n// Injects utilities for redirecting back to the original page.\r\nexport const interceptPage: any = (wrappedComponent: any) => withRouter(withPush(withNext(wrappedComponent)));\r\n","import React, { useState } from 'react';\r\nimport Layout from '../components/layouts/Main';\r\nimport AuthForm from '../components/forms/AuthForm';\r\nimport authService from '../services/authService';\r\nimport usersService from '../services/usersService';\r\nimport { interceptPage } from '../utils/interceptPage';\r\nimport { ModeType, UserType } from '../logic/types';\r\n\r\n/* \r\n    Users can log in using either their e-mail (passport 'username') or their publicName\r\n    If non-email address value entered, match with publicName and replace 'email' value \r\n    by matched user's username (=email) \r\n */\r\ninterface Props {\r\n    user: UserType,\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    changeQuery: any,\r\n    next?: any,\r\n    onSuccess: any,\r\n}\r\n\r\nconst Register = ({ user, mode, setDarkMode, changeQuery, next, onSuccess }: Props) => {\r\n    const [error, setError] = useState('');\r\n\r\n    const setErrorMessage = (err: {message: string, request: any}) => {\r\n        setError(err.request.response)\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            user={user}\r\n            mode={mode}\r\n            setDarkMode={setDarkMode}\r\n            changeQuery={changeQuery}\r\n        >\r\n            <AuthForm\r\n                mode={mode}\r\n                register={true}\r\n                initialValues={{\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                }}\r\n                onSubmit={({ username, password, email }: { username: string, password: string, email: string }) => {\r\n                    authService\r\n                        .register(username, password, email)\r\n                        .then(res => {\r\n                            const { user } = res;\r\n                            onSuccess(user);\r\n                            next();\r\n                        })\r\n                    .catch(setErrorMessage);\r\n                }}\r\n                error={error}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\n// export default interceptPage(withShowError(Register));\r\nexport default interceptPage(Register);\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        let res = await axios.get(`/api/users`);\r\n        return res.data || [];\r\n    },\r\n\r\n    // getOne: async data => {\r\n    //     let res = await axios.get(`/api/users/${data.objectId}`);\r\n    //     return res.data || [];\r\n    // },\r\n\r\n    // TODO: declare user type\r\n    update: (data: any) => {\r\n        return axios.put(`/api/users/${data.objectId}`, data);\r\n    },\r\n};\r\n","import React, { useState } from 'react';\r\nimport Layout from '../components/layouts/Main';\r\nimport AuthForm from '../components/forms/AuthForm';\r\nimport authService from '../services/authService';\r\nimport usersService from '../services/usersService';\r\nimport { interceptPage } from '../utils/interceptPage';\r\nimport { ModeType, UserType } from '../logic/types';\r\n\r\n/* \r\n    Users can log in using either their e-mail (passport 'username') or their publicName\r\n    If non-email address value entered, match with publicName and replace 'email' value \r\n    by matched user's username (=email) \r\n */\r\ninterface Props {\r\n    user: UserType,\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    changeQuery: any,\r\n    next?: any,\r\n    onLoginSuccess: any,\r\n    showError: any,\r\n    // user: UserType,\r\n}\r\n\r\nconst Login = ({ user, mode, setDarkMode, changeQuery, next, onLoginSuccess, showError }: Props) => {\r\n    const [error, setError] = useState('');\r\n\r\n    const setErrorMessage = (err: any) => {\r\n        setError(err.request.response)\r\n    }\r\n\r\n    return (\r\n        <Layout\r\n            user={user}\r\n            mode={mode}\r\n            setDarkMode={setDarkMode}\r\n            changeQuery={changeQuery}\r\n        >\r\n            <AuthForm\r\n                mode={mode}\r\n                error={error}\r\n                register={false}\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                }}\r\n                onSubmit={async ({ password, email }: { password: string, email: string }) => {\r\n                    if (email.indexOf('@') === -1)\r\n                        await usersService.getAll()\r\n                            .then((users: Array<{ publicName: string, password: string, username: string }>) => {\r\n                                let matchedUsers = users.filter(user => user.publicName === email);\r\n                                email = matchedUsers.length > 0 ? matchedUsers[0].username : email;\r\n                            })\r\n                            .catch(setErrorMessage)\r\n\r\n                    authService\r\n                        .login(password, email)\r\n                        .then(({ user }) => {\r\n                            onLoginSuccess(user);\r\n                            next();\r\n                        })\r\n                        .catch(setErrorMessage);\r\n                }}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\n// export default interceptPage(withShowError(Login));\r\nexport default interceptPage(Login);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Typography, Fade } from '@material-ui/core';\r\nimport Layout from '../components/layouts/Main';\r\nimport { AppFormLayout } from '../components/forms/AppForm';\r\nimport authService from '../services/authService';\r\nimport { ModeType, UserType } from '../logic/types';\r\nimport { PATHS } from '../constants/data';\r\nconst { home } = PATHS;\r\n\r\n// TODO: sort this page out \r\n\r\ninterface Props {\r\n    user: UserType,\r\n    mode: ModeType,\r\n    setDarkMode: any,\r\n    changeQuery: any,\r\n    onSuccess: any,\r\n}\r\n\r\nconst Logout = ({ user, mode, setDarkMode, changeQuery, onSuccess }: Props) => {\r\n\r\n    const [logoutRequestDone, setLogoutRequestDone] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!logoutRequestDone) {\r\n            setTimeout(() => {\r\n                authService\r\n                .logout()\r\n                .then(() => onSuccess())\r\n                // .catch(showError)\r\n                .finally(() => setLogoutRequestDone(true));\r\n            }, 3000);\r\n        }\r\n    });\r\n\r\n    if (logoutRequestDone) {\r\n        return <Redirect to={home} />;\r\n    } else {\r\n        return (\r\n            <Layout\r\n                user={user}\r\n                mode={mode}\r\n                setDarkMode={setDarkMode}\r\n                changeQuery={changeQuery}\r\n            >\r\n                <AppFormLayout>\r\n                    <Fade timeout={1000} in={true}>\r\n                        <Typography variant=\"h4\">\r\n                            Bye, bye, monster!\r\n                        </Typography>\r\n                    </Fade>\r\n                </AppFormLayout>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\n// export default withShowError(Logout);\r\nexport default Logout;\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    children: React.ReactChild,\r\n    location: { pathname: string },\r\n}\r\n\r\nconst ScrollToTop: any = ({ children, location: { pathname } }: Props) => {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return children;\r\n};\r\n\r\n// export default withRouter(ScrollToTop);\r\nexport default withRouter(ScrollToTop);\r\n","export const dummyGallery = {\r\n    \"furry+monster\": [\r\n        {\r\n            \"title\": \"Furry - Monster - YouTube\",\r\n            \"src\": \"https://i.ytimg.com/vi/SI6JEpsCO6Q/hqdefault.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"3d Cartoon Furry Monster Stock Photo, Picture And Royalty Free ...\",\r\n            \"src\": \"https://previews.123rf.com/images/albertzig/albertzig1210/albertzig121000821/15695672-3d-cartoon-furry-monster.jpg\"\r\n        },\r\n    ],\r\n    \"giant+furry+monster\": [\r\n        {\r\n            \"title\": \"Giant furry monster used in new pensions advert by UK Government ...\",\r\n            \"src\": \"https://cdn.images.express.co.uk/img/dynamic/50/590x/Workie-613568.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Gruff | Monster Moviepedia | Fandom\",\r\n            \"src\": \"https://vignette.wikia.nocookie.net/monstermovies/images/1/19/Gruff.jpg/revision/latest/scale-to-width-down/340?cb=20150717152938\"\r\n        },\r\n    ],\r\n    \"pink+furry+monster\": [\r\n        {\r\n            \"title\": \"Furry Fluffy Hairy Pink Monster Vector Illustration Stock Photo ...\",\r\n            \"src\": \"https://previews.123rf.com/images/martinffff/martinffff1803/martinffff180300014/96986157-furry-fluffy-hairy-pink-monster-vector-illustration.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Furry pink monster.\",\r\n            \"src\": \"https://comps.canstockphoto.com/furry-pink-monster-clip-art_csp11099223.jpg\"\r\n        },\r\n    ],\r\n    \"cute+furry+monster\": [\r\n        {\r\n            \"title\": \"Cute furry monster on white background Royalty Free Vector\",\r\n            \"src\": \"https://cdn3.vectorstock.com/i/1000x1000/11/92/cute-furry-monster-on-white-background-vector-23321192.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Cute Furry Monster Stock Photo, Picture And Royalty Free Image ...\",\r\n            \"src\": \"https://previews.123rf.com/images/albertzig/albertzig1210/albertzig121001596/16005014-cute-furry-monster.jpg\"\r\n        },\r\n    ],\r\n    \"art+furry+monster\": [\r\n        {\r\n            \"title\": \"LF: Furry / Monster Artists | Art Sales | Flight Rising\",\r\n            \"src\": \"https://file.toyhou.se/images/1712121_kLw9CKlQ4Uu1lBY.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Furry fandom Yiff Monster Art Drawing, Chill Out free png | PNGFuel\",\r\n            \"src\": \"https://f0.pngfuel.com/png/226/443/furry-fandom-yiff-monster-art-drawing-chill-out-png-clip-art.png\"\r\n        },\r\n    ],\r\n    \"little+furry+monster\": [\r\n        {\r\n            \"title\": \"3d Cartoon Cute Furry Monster Stock Photo, Picture And Royalty ...\",\r\n            \"src\": \"https://previews.123rf.com/images/albertzig/albertzig1210/albertzig121000772/15657769-3d-cartoon-cute-furry-monster.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"The Toy Chronicle | The Little Furry Monsters - Miss Little Zombie\",\r\n            \"src\": \"http://thetoychronicle.com/wp-content/uploads/2014/08/The-Little-Furry-Monsters-Miss-Little-Zombie-kurb-blur.jpg\"\r\n        },\r\n    ],\r\n    \"friendly+furry+monster\": [\r\n        {\r\n            \"title\": \"Blue Cute Friendly Furry Monster Stock Illustrations – 23 Blue ...\",\r\n            \"src\": \"https://thumbs.dreamstime.com/z/cute-friendly-furry-blue-monster-8587709.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Illustration of a cute friendly furry blue monster Stock Vector ...\",\r\n            \"src\": \"https://c8.alamy.com/comp/DNM226/illustration-of-a-cute-friendly-furry-blue-monster-DNM226.jpg\"\r\n        },\r\n    ],\r\n    \"mythical+furry+monster\": [\r\n        {\r\n            \"title\": \"COM - Electric boy by ScissorsRunner | Greek mythological ...\",\r\n            \"src\": \"https://i.pinimg.com/originals/75/f2/cb/75f2cb5de15a4641f5b6e0600bb75c2c.png\"\r\n        },\r\n        {\r\n            \"title\": \"Furrybones Tatsu Figure Monster Figures Furry Bones | Radar Toys\",\r\n            \"src\": \"https://cdn.shopify.com/s/files/1/0049/0872/products/mythical-creatures-furrybones-tatsu-resin-figure-1.jpg?v=1489626379\"\r\n        },\r\n    ],\r\n};\r\n\r\n// Dummy method to get dummy data for demo purposes to gh-pages as the server is not running there, only client.\r\nexport const getData = (query: string) => {\r\n  if(query === \"+furry+monster\") {\r\n    query = \"furry+monster\";\r\n  }\r\n\r\n  for (let [key, value] of Object.entries(dummyGallery)) {\r\n    if (key === query.toLowerCase()) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport Landing from './pages/Landing';\r\nimport Home from './pages/Home';\r\nimport Monsters from './pages/Monsters';\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Logout from './pages/Logout'\r\nimport ScrollToTop from './utils/ScrollToTop';\r\nimport authService from './services/authService';\r\nimport monstersService from './services/monsters';\r\nimport { INITIAL_STATE, PATHS} from './constants/data';\r\nimport { ModeType, StateType, UserType } from './logic/types';\r\nimport { getData } from './constants/dummyGallery';\r\n\r\n/*\r\n  App routes are handled by react router. Make sure the app uses the 'Link' component from react-router-dom for all in-app paths.\r\n  DO NOT USE THE ONE FROM MATERIAL-UI for in-app links!\r\n  The one from router handles correctly all redirects from protected or guest pages. The one from material-ui logs the user out.\r\n*/\r\nclass App extends Component<{}, StateType> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  resolveWhoAmI = (user: UserType) => {\r\n    this.setState({ user, whoAmIRequestDone: true })\r\n  }\r\n\r\n  clearUser = () => {\r\n    this.setState({ user: undefined })\r\n  }\r\n\r\n  setUser = (user: UserType) => {\r\n    this.setState({ user })\r\n  }\r\n\r\n  setDarkMode = (mode: ModeType) => {\r\n    this.setState({ mode: mode })\r\n  }\r\n\r\n  getMonsters = () => {\r\n    const {\r\n      // getGoogleAPI, \r\n      getGoogleHTML,\r\n      // getGoogleScrape \r\n    } = monstersService;\r\n    const { query } = this.state;\r\n    // TODO: Check for received errors and run another method if the previous one failed\r\n    getGoogleHTML(query)\r\n      .then(res => this.setState({ data: res }))\r\n      .catch(err => this.setState({ data: getData(query) || [] }))\r\n  }\r\n\r\n  addItems = (list: Array<({ title: string, src: string })>) => () => {\r\n    this.setState(state => {\r\n      const data = [...state.data, ...list];\r\n\r\n      return { data }\r\n    })\r\n  }\r\n\r\n  changeQuery = (name: string) => () => {\r\n    this.setState({ query: `${name}+furry+monster` }, () => this.getMonsters())\r\n  }\r\n\r\n  componentDidMount() {\r\n    authService.whoAmI().then(({ user }) => {\r\n      this.resolveWhoAmI(user);\r\n    });\r\n\r\n    this.getMonsters()\r\n  }\r\n\r\n  render() {\r\n    const { mode, query, data } = this.state;\r\n    const { root, landing, home, main, login, logout, register } = PATHS;\r\n    \r\n    // TODO: consider using , { Suspense, lazy } - https://reactjs.org/docs/code-splitting.html#route-based-code-splitting\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ScrollToTop>\r\n          <Switch>\r\n            {/*\r\n                A Switch will iterate through all routes and return\r\n                on the first match.\r\n                The order matters - the most generic paths should\r\n                be at the very end.\r\n              */}\r\n            {/* <Route exact path={root}>\r\n              <Redirect to={landing} />\r\n            </Route> */}\r\n            <Route exact path={landing}>\r\n              <Landing />\r\n            </Route>\r\n            <Route path={login}>\r\n              <Login\r\n                onLoginSuccess={this.setUser}\r\n                // notificationsProps={notificationsProps}\r\n                mode={this.state.mode}\r\n                changeQuery={this.changeQuery}\r\n                setDarkMode={this.setDarkMode}\r\n              />\r\n            </Route>\r\n            <Route path={register}>\r\n              <Register\r\n                user={this.state.user}\r\n                onSuccess={this.setUser}\r\n                // notificationsProps={notificationsProps}\r\n                mode={this.state.mode}\r\n                changeQuery={this.changeQuery}\r\n                setDarkMode={this.setDarkMode}\r\n              />\r\n            </Route>\r\n            <Route path={logout}>\r\n              <Logout\r\n                user={this.state.user}\r\n                onSuccess={this.clearUser}\r\n                // notificationsProps={notificationsProps}\r\n                mode={this.state.mode}\r\n                changeQuery={this.changeQuery}\r\n                setDarkMode={this.setDarkMode}\r\n              />\r\n            </Route>\r\n            {/* \r\n              This is a protected page requiring authentication.\r\n              Users who are not logged in will be redirected to Login page\r\n            */}\r\n            <Route path={main}>\r\n              <Monsters\r\n                user={this.state.user}\r\n                query={query}\r\n                data={data}\r\n                mode={this.state.mode}\r\n                changeQuery={this.changeQuery}\r\n                setDarkMode={this.setDarkMode}\r\n              />\r\n            </Route>\r\n            {/* \r\n              This is a page available for guests only. Logged users will be redirected to the main page (see PATHS.main in constants/data)\r\n              It is meant to display general information about the app\r\n            */}\r\n            <Route path={home}>\r\n              <Home\r\n                user={this.state.user}\r\n                query={query}\r\n                data={data}\r\n                mode={this.state.mode}\r\n                changeQuery={this.changeQuery}\r\n                setDarkMode={this.setDarkMode}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </ScrollToTop>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}
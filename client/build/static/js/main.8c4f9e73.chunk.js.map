{"version":3,"sources":["pages/Landing.tsx","styles/main.tsx","services/monsters.tsx","components/Loading.tsx","components/ActionButtons.tsx","components/Menu.tsx","components/Comment.tsx","components/CommentsList.tsx","components/CollapsePanel.tsx","components/CommentsSection.tsx","components/Card.tsx","pages/Monsters.tsx","App.tsx","index.tsx"],"names":["Landing","props","Fragment","className","Typography","variant","to","color1","useStyles","createMuiTheme","palette","primary","light","main","dark","secondary","text","makeStyles","theme","createStyles","backgroundColor","minWidth","minHeight","flexSpaceBetween","display","justifyContent","width","flexCenter","width100","spacingRight","marginRight","spacing","height200","height","height250","height300","bottom20","marginBottom","bgDark","bgColor","bgLight","bgHoverDarker","bgHoverLighter","appBar","zIndex","drawer","color","toolbar","mixins","drawerPaper","formPaper","padding","marginTop","content","flexGrow","breakpoints","up","marginLeft","textColorLight","textColorDark","textColor","noDecoration","textDecoration","center","textAlign","hideMdUp","down","hideSmDown","loading","flexDirection","alignItems","fontSize","get1","query","a","axios","get","res","data","get2","get3","LinearBuffer","React","useState","progress","setProgress","buffer","setBuffer","progressRef","useRef","useEffect","current","diff","Math","random","diff2","timer","setInterval","clearInterval","style","paddingTop","LinearProgress","value","valueBuffer","ActionButtons","user","comments","likes","IconButton","aria-label","length","CardMenu","model","object","menuItems","Menu","id","keepMounted","open","map","item","i","MenuItem","key","name","Comment","comment","users","author","publicName","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","component","moment","created","fromNow","body","CommentsList","List","Divider","_id","SimpleCollapse","expanded","children","Collapse","in","timeout","unmountOnExit","CommentsSection","Box","CollapsePanel","MonsterCard","title","subtitle","mediaTop","mediaMiddle","Card","CardHeader","avatar","action","aria-controls","aria-haspopup","subheader","CardContent","CardActions","disableSpacing","Monsters","monsters","setMonsters","getMonsters","monstersService","Container","maxWidth","Grid","container","direction","justify","monster","index","xs","sm","md","lg","xl","parseInt","toString","Object","Map","App","state","path","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c4f9e73.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/landing.css';\r\n// import Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst Landing = (props: any) => (\r\n    <React.Fragment>\r\n        <div className=\"fade-in\">\r\n            <div className=\"landing-header\">\r\n                <Typography variant=\"h4\">A large, ugly, and frightening imaginary creature</Typography>\r\n                <Typography className=\"offset\" variant=\"h5\">\r\n                    noun | UK <VolumeUpIcon />\r\n                    /ˈmɒn.stər/ | US <VolumeUpIcon /> /ˈmɑːn.stɚ/\r\n                </Typography>\r\n                <Link to={'/monsters/monsters'} className=\"btn-slideshow\">\r\n                ENTER IF YOU DARE\r\n                </Link>\r\n            </div>\r\n        </div>\r\n        <ul className=\"slideshow\">\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n        </ul>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Landing;\r\n\r\n","//TODO: add some fancy transition when opening a new page, currently updating page feels unnatural\r\n\r\n// The purpose of this file is to integrate all styles in one place and reuse classes in various components\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\n// Below components need to be imported to correctly overwrite styles with classes in useStyle\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Custom palette - colors should be defined here and referenced in classes\r\nconst color1 = '#1A1A1D'; // black\r\nconst color2 = '#950740'; // dark purple\r\nconst color3 = '#F0F0F0'; // light grey\r\nconst color4 = '#6e6e6e'; // lighter black\r\nconst colorHoverLighter = 'rgba(255, 255, 255, 0.075)';\r\nconst colorHoverDarker = 'rgba(0, 0, 0, 0.075)';\r\n\r\n// Overwrite colors with custom color palette\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: color3,\r\n            main: color1,\r\n            dark: color2,\r\n        },\r\n        secondary: {\r\n            main: color2,\r\n        },\r\n        text: {\r\n            primary: color1,\r\n            secondary: color4,\r\n        },\r\n    },\r\n});\r\n\r\n// Misc const used in styles\r\nconst drawerWidth = 300;\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        // Display and size\r\n        main: {\r\n            backgroundColor: color3,\r\n            minWidth: '100%',\r\n            minHeight: '100%',\r\n        },\r\n        flexSpaceBetween: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n        },\r\n        flexCenter: {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n        },\r\n        width100: {\r\n            width: '100px',\r\n        },\r\n        spacingRight: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        height200: {\r\n            height: '200px',\r\n        },\r\n        height250: {\r\n            height: '250px',\r\n        },\r\n        height300: {\r\n            height: '300px',\r\n        },\r\n        bottom20: {\r\n            marginBottom: '20px',\r\n        },\r\n\r\n        // Containers\r\n        bgDark: {\r\n            backgroundColor: color1,\r\n        },\r\n        bgColor: {\r\n            backgroundColor: color2,\r\n        },\r\n        bgLight: {\r\n            backgroundColor: color3,\r\n        },\r\n        bgHoverDarker: {\r\n            backgroundColor: colorHoverDarker,\r\n        },\r\n        bgHoverLighter: {\r\n            backgroundColor: colorHoverLighter,\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: color3,\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: `${drawerWidth}px`,\r\n        },\r\n        formPaper: {\r\n            padding: theme.spacing(2),\r\n            color: color1,\r\n            width: '33%',\r\n            minWidth: '400px',\r\n            marginTop: '3%',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: `${drawerWidth}px`,\r\n            },\r\n        },\r\n\r\n        // Texts\r\n        textColorLight: {\r\n            color: color3,\r\n        },\r\n        textColorDark: {\r\n            color: color1,\r\n        },\r\n        textColor: {\r\n            color: color2,\r\n        },\r\n        noDecoration: {\r\n            textDecoration: 'none',\r\n        },\r\n        center: {\r\n            textAlign: 'center',\r\n        },\r\n\r\n        // Hidden\r\n        hideMdUp: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        hideSmDown: {\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n\r\n        // Misc\r\n        loading: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            padding: '5%',\r\n            fontSize: '10em',\r\n            color: color1,\r\n        },\r\n    })\r\n);\r\n","// This service file runs image search websites\r\n// by keywords 'furry monster' and pulls image addresses \r\n// of found images thumbnails.\r\n// These image url's are added to the monster json generator\r\n\r\n// Search for this app (images): \r\n// https://www.google.com/search?q=furry+monster&tbm=isch\r\n\r\n// Allow user to select color or other features cute/humanoid\r\n// https://www.google.com/search?q=furry+monster&tbm=isch&chips=q:furry+monster,g_1:pink\r\n\r\n// select features from textContent of spans by class name \"hIOe2\"\r\n// Click on images and get url from element with clsss n3VNCb\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    // Using puppeteer\r\n    get1: async (query: string) => {\r\n        let res = await axios.get(`/puppeteer/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using custom google search api (only 10 in free version)\r\n    get2: async (query: string) => {\r\n        let res = await axios.get(`/custom-google/search?q=${query}`);\r\n        return res.data || [];\r\n    },\r\n    // Using html selectors\r\n    get3: async (query: string) => {\r\n        let res = await axios.get(`/html/search?q=${query}`);\r\n        return res.data || [];\r\n    }\r\n};","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Container, Typography, LinearProgress, CircularProgress } from '@material-ui/core';\r\n\r\nexport const Loading = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Empty = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.loading}>\r\n            <i className=\"optin monster icon\" style={{color: \"#fff\"}} />\r\n            <Typography variant=\"h5\" style={{color: \"#fff\"}}>Oops... Nothing found. Lazy, lazy...</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const LinearBuffer = () => {\r\n    const classes = useStyles();\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [buffer, setBuffer] = React.useState(10);\r\n  \r\n    const progressRef = React.useRef(() => {});\r\n    React.useEffect(() => {\r\n      progressRef.current = () => {\r\n        if (progress > 100) {\r\n          setProgress(0);\r\n          setBuffer(10);\r\n        } else {\r\n          const diff = Math.random() * 10;\r\n          const diff2 = Math.random() * 10;\r\n          setProgress(progress + diff);\r\n          setBuffer(progress + diff + diff2);\r\n        }\r\n      };\r\n    });\r\n  \r\n    React.useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        progressRef.current();\r\n      }, 500);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n  \r\n    return (\r\n      <div style={{ width: \"100%\", paddingTop: \"45vh\"}}>\r\n        <LinearProgress \r\n            variant=\"buffer\" \r\n            value={progress} \r\n            valueBuffer={buffer} \r\n            color=\"secondary\"\r\n        />\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\r\n\r\ninterface Props {\r\n    user: string,\r\n    comments: Array<Object>,\r\n    likes: Array<Object>,\r\n    // handleExpandClick: any\r\n}\r\n\r\nexport const ActionButtons = ({\r\n    user,\r\n    comments,\r\n    likes,\r\n    // handleExpandClick\r\n}: Props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <Typography variant=\"caption\">{likes.length}</Typography>\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            {/* <IconButton aria-label=\"share\">\r\n                                <ShareIcon />\r\n                            </IconButton> */}\r\n            <IconButton\r\n                // onClick={handleExpandClick}\r\n            // aria-expanded={expanded}\r\n            // aria-label=\"show more\"\r\n            >\r\n                <ModeCommentOutlinedIcon />\r\n                <Typography variant=\"caption\">{comments.length}</Typography>\r\n            </IconButton>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\r\n// import { ObjectDeleteButton } from '../../../Buttons';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\ninterface Props {\r\n    user: string,\r\n    model: string,\r\n    object: Object,\r\n    // anchorEl: HTMLElement,\r\n    // handleMenuClose: any,\r\n    menuItems: Array<{ name: string }>,\r\n}\r\n\r\nexport const CardMenu = ({\r\n    user,\r\n    model,\r\n    object,\r\n    // anchorEl,\r\n    // handleMenuClose,\r\n    menuItems\r\n}: Props) => {\r\n    return (\r\n        <Menu \r\n            id=\"simple-menu\" \r\n            // anchorEl={anchorEl} \r\n            keepMounted \r\n            open={false} \r\n            // open={Boolean(anchorEl)} \r\n            // onClose={handleMenuClose}\r\n        >\r\n            {/* TODO: implement action to go to projects page and change state for current project */}\r\n            {menuItems.map((item, i) => (\r\n                <MenuItem \r\n                    key={i} \r\n                    // onClick={handleMenuClose}\r\n                >\r\n                    {item.name}\r\n                </MenuItem>\r\n            ))}\r\n            {/* <ObjectDeleteButton user={user} model={model} object={object} /> */}\r\n        </Menu>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport moment from 'moment';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { ObjectDeleteButton } from './Buttons';\r\nimport { CommentType } from '../types/types';\r\n\r\n\r\ninterface Props {\r\n    user: string,\r\n    comment: CommentType,\r\n    users: Map<string, any>\r\n}\r\n\r\nexport const Comment = ({ user, comment, users }: Props) => {\r\n    const classes = useStyles();\r\n    const author = users.get(comment.author).publicName;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                    <Avatar alt={author} src=\"/static/images/avatar/1.jpg\" />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <React.Fragment>\r\n                            <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                                {author}\r\n                            </Typography>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"caption\"\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {` - ${moment(comment.created).fromNow()}`}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                    secondary={comment.body}\r\n                />\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n            </ListItem>\r\n            {/* <Divider variant=\"inset\" component=\"li\" /> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Comment } from './Comment';\r\nimport { CommentType } from '../types/types';\r\n\r\n\r\ninterface Props {\r\n    user: string,\r\n    comments: Array<CommentType>,\r\n    users: Map<string, any>,\r\n}\r\n\r\nexport const CommentsList = ({ user, comments, users }: Props) => {\r\n    return (\r\n        <List>\r\n            <Divider component=\"li\" />\r\n            {(comments || []).map(comment => (\r\n                <Comment key={comment._id} user={user} comment={comment} users={users} />\r\n            ))}\r\n        </List>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Collapse, { CollapseProps } from '@material-ui/core/Collapse';\r\n\r\ninterface Props {\r\n    expanded: Boolean,\r\n    // expanded: JSX.IntrinsicAttributes,\r\n    children: Array<React.ReactChildren>,\r\n}\r\n\r\n// TODO: fix the warning about children\r\nconst SimpleCollapse = ({ expanded, children }: Props) => <aside>\r\n        <React.Fragment>\r\n            <Collapse in={false} timeout=\"auto\" unmountOnExit>\r\n                {children}\r\n            </Collapse>\r\n        </React.Fragment>\r\n    </aside>\r\n\r\nexport default SimpleCollapse;\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { CommentsList } from './CommentsList';\r\n// import { AddComment } from './forms/Comment';\r\nimport CollapsePanel from './CollapsePanel';\r\nimport { CommentType } from '../types/types';\r\n\r\ninterface Props {\r\n    expanded: Boolean,\r\n    user: string,\r\n    object: Object,\r\n    model: string,\r\n    comments: Array<CommentType>,\r\n    users: Map<string, any>,\r\n}\r\n\r\nconst CommentsSection = ({ expanded, user, object, model, comments, users }: Props) => {\r\n    return (\r\n        <Box id=\"comments\">\r\n            <CollapsePanel expanded={expanded}>\r\n                <CommentsList user={user} comments={comments} users={users} />\r\n                {/* <AddComment user={user} _id={object._id} model={model} updateStateData={updateStateData} push={push} /> */}\r\n            </CollapsePanel>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport { CommentsSection };\r\n","import React from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport { Card, CardMedia, CardHeader, CardContent, CardActions, IconButton, Typography } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { ActionButtons } from './ActionButtons';\r\nimport { CardMenu } from './Menu';\r\nimport { CommentsSection } from './CommentsSection';\r\nimport { CommentType } from '../types/types';\r\n\r\ninterface Props {\r\n    user: string,\r\n    object: Object,\r\n    model: string,\r\n    comments: Array<CommentType>,\r\n    likes: Array<Object>,\r\n    users: Map<string, any>,\r\n    title: string,\r\n    subtitle: string,\r\n    body: string,\r\n    mediaTop?: React.Component,\r\n    mediaMiddle?: React.Component,\r\n    menuItems: Array<{name:string}>,\r\n    // updateStateData: any // or void?\r\n}\r\n\r\n// Pass a component to mediaTop or mediaBottom depending on which location it is needed in\r\nexport const MonsterCard = ({\r\n    user,\r\n    object,\r\n    model,\r\n    comments,\r\n    likes,\r\n    users,\r\n    title,\r\n    subtitle,\r\n    body,\r\n    mediaTop,\r\n    mediaMiddle,\r\n    menuItems,\r\n    // updateStateData,\r\n}: Props) => {\r\n    const classes = useStyles();\r\n    // TODO: figure out how to declare it in typescript\r\n    // const [expanded, setExpanded] = React.useState(false);\r\n    // const handleExpandClick = () => {\r\n    //     setExpanded(!expanded);\r\n    // };\r\n\r\n    // const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    // const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handleMenuClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <Card style={{height: \"100%\"}} >\r\n            {mediaTop ? mediaTop : null}\r\n            <CardHeader\r\n                avatar={null}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"long-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        // onClick={handleMenuClick}\r\n                    >\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={title}\r\n                subheader={subtitle}\r\n            />\r\n            <CardMenu\r\n                user={user}\r\n                object={object}\r\n                model={model}\r\n                // anchorEl={anchorEl}\r\n                // handleMenuClose={handleMenuClose}\r\n                menuItems={menuItems}\r\n            />\r\n            {mediaMiddle ? mediaMiddle : null}\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {body}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <ActionButtons \r\n                    user={user} \r\n                    comments={comments} \r\n                    likes={likes} \r\n                    // handleExpandClick={handleExpandClick} \r\n                />\r\n            </CardActions>\r\n            <CardContent>\r\n                <CommentsSection\r\n                    // expanded={expanded}\r\n                    expanded={false}\r\n                    user={user}\r\n                    object={object}\r\n                    model={model}\r\n                    comments={comments}\r\n                    users={users}\r\n                    // updateStateData={updateStateData}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useStyles } from '../styles/main';\r\nimport monstersService from '../services/monsters'\r\nimport { LinearBuffer } from '../components/Loading'\r\nimport { MonsterCard } from '../components/Card'\r\nimport { Container, Grid, CardMedia } from '@material-ui/core';\r\n\r\ninterface Monster {\r\n    title: string,\r\n    src: string,\r\n}\r\n\r\nconst Monsters = () => {\r\n    const classes = useStyles();\r\n    const [monsters, setMonsters] = useState([]);\r\n\r\n    const getMonsters = async () => {\r\n        let res = await monstersService.get1('furry+monster');\r\n        setMonsters(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (monsters.length === 0) {\r\n            getMonsters();\r\n        }\r\n    });\r\n\r\n    // TODO: Handle timeout\r\n    return (\r\n        !monsters || monsters.length === 0 ?\r\n            <LinearBuffer />\r\n            : (\r\n                <Container maxWidth=\"lg\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={2}\r\n                    >\r\n                        {monsters.map((monster: Monster, index: Number) =>\r\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={`g2-${index}`}>\r\n                                <MonsterCard\r\n                                    key={parseInt(index.toString())}\r\n                                    // user={user}\r\n                                    // object={post}\r\n                                    // model=\"Monster\"\r\n                                    user={\"Alpha\"}\r\n                                    object={new Object()}\r\n                                    model=\"Monster\"\r\n                                    comments={[]}\r\n                                    likes={[]}\r\n                                    // users={users}\r\n                                    users={new Map()}\r\n                                    title=\"Monster\"\r\n                                    subtitle={`No${parseInt(index.toString()) + 1}`}\r\n                                    body={monster.title}\r\n                                    // TODO: find out what type <CardMedia> is\r\n                                    // mediaMiddle={\r\n                                    //     <CardMedia className={classes.height250} image={monster.src} />\r\n                                    //     // <img src={monster.src} />\r\n                                    // }\r\n                                    menuItems={[{ name: 'Share monster' }]}\r\n                                // updateStateData={updateStateData}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Container>\r\n            )\r\n    );\r\n}\r\n\r\nexport default Monsters;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Landing from './pages/Landing';\r\nimport Monsters from './pages/Monsters';\r\nimport './App.css';\r\nimport ScrollToTop from './utils/ScrollToTop';\r\n\r\nclass App extends Component {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        {/* <ScrollToTop> */}\r\n          <div className=\"App\">\r\n            <Switch>\r\n              {/*\r\n                A Switch will iterate through all routes and return\r\n                on the first match.\r\n                The order matters - the most generic paths should\r\n                be at the very end.\r\n              */}\r\n              <Route path=\"/monsters/monsters\">\r\n                <Monsters />\r\n              </Route>\r\n              <Route path=\"/monsters\">\r\n                <Landing />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        {/* </ScrollToTop> */}\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}